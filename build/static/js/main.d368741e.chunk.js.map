{"version":3,"sources":["components/header.jsx","images/imageHome.PNG","components/home.jsx","components/recipesMenu.jsx","components/recipe.jsx","components/login.jsx","components/profile.jsx","components/createRecipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","history","useHistory","navigateToPage","useCallback","path","push","useState","windowEmailActive","setWindowEmailActive","useEffect","window","$email","setCount","items","label","icon","command","start","alt","src","onError","e","target","height","className","model","end","onClick","count","to","authBtn","Home","products","setProducts","setStatus","recipecards","setRecipeCards","useLayoutEffect","fetchProducts","forEach","product","allRecipes","Fragment","title","name","header","imageurl","style","width","id","a","axios","method","url","catch","error","res","data","status","imageHome","value","itemTemplate","recipes","numVisible","numScroll","circular","autoplayInterval","RecipesMenu","subTitle","categories","footer","averagetimeinminutes","Recipe","state","selectedIngredient","activeIndex","ingredients","class","this","options","onChange","setState","optionLabel","Component","Login","toast","useRef","Email","setEmail","Pass","setPassword","handleOnLoginSuccess","showNoValidCredentialsError","current","clear","show","severity","summary","detail","life","closable","sleep","milliseconds","Promise","resolve","setTimeout","requestCatPic","webpurl","login","console","log","toLowerCase","$id","accountId","then","r","register","mail","toLocaleLowerCase","test","picurl","email","ref","placeholder","type","feedback","Profile","handleNotLoggedIn","submitPassword","disabled","CreateRecipe","handleOnAddRecipeSuccess","recipeName","setRecipeName","recipeImageUrl","setRecipeImageUrl","recipeavgtime","setRecipeAvgTime","recipedifficulty","setRecipeDifficulty","recipeingredients","setRecipeIngredients","recipeinstruction","setRecipeInstruction","selectedcategorys","setSelectedCategorys","changeInputToDefault","showInputValidError","entry","addRecipe","JSON","stringify","htmlFor","hight","mode","onValueChange","margin","min","max","rows","cols","autoResize","filter","filterPlaceholder","selectionLimit","display","showSelectAll","length","PrimeReact","ripple","App","HomePage","RecipesMenuPage","RecipePage","LoginPage","ProfilePage","CreateRecipePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d368741e.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { Button } from 'primereact/button';\nimport { Link } from 'react-router-dom'\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport { useHistory } from 'react-router-dom';\nimport { Menubar } from \"primereact/menubar\";\n\n\nconst Header = (props) => {\n\n    const history = useHistory();\n\n    const navigateToPage = useCallback((path) => history.push(path), [history]);\n\n    const [windowEmailActive, setWindowEmailActive] = useState(false);\n    useEffect(() => {\n            window.$email != null && setWindowEmailActive(true);\n        }, []);\n\n    // eslint-disable-next-line no-unused-vars\n    const [count, setCount] = useState(0);\n\n    const authBtn = (windowEmailActive) =>\n    windowEmailActive !== false ? (\n        <Button\n        label=\"Logout\"\n        icon=\"pi pi-fw pi-sign-out\"\n        className=\"p-shadow-1\"\n        onClick={() => {\n                            setCount(count => count + 1);\n                            window.$email = null;\n                            setWindowEmailActive(false)\n                        }\n                }\n        />\n    ) : (\n        <Link to=\"/login\">\n            <Button label=\"Login\" icon=\"pi pi-fw pi-sign-in\" className=\"p-shadow-1\"/>\n        </Link>\n    );\n\n    const items = [\n        {\n            label: 'Home',\n            icon: 'pi pi-fw pi-file',\n            command:()=>{ navigateToPage(\"/\")}\n        },\n        { \n            label: 'Rezepte',\n            icon: 'pi pi-fw pi-file',\n            command:()=>{ navigateToPage(\"/menu\")}\n        },\n        {\n            label: 'Erstellen',//in Profil einfügen?\n            icon: 'pi pi-fw pi-pencil',\n            command:()=>{ navigateToPage(\"/create\")}\n        },\n        {\n            label: 'Profil',\n            icon: 'pi pi-fw pi-user',\n            command:()=>{ navigateToPage(\"/profile\")}\n        },\n        {\n            label: 'Favoriten',\n            icon: 'pi pi-fw pi-calendar',\n            command:()=>{ navigateToPage(\"/favorites\")}\n        }\n    ];\n\n    const start = <img alt=\"logo\" src=\"showcase/images/logo.png\" onError={(e) => e.target.src='https://i.ibb.co/d6P2dT2/rataicon.png'} height=\"40\" className=\"p-mr-2\"></img>;\n\n\n    return (\n        <div>\n            <div className=\"card\">\n                <Menubar model={items} start={start} end={\n                <div>\n                    {authBtn(windowEmailActive)}\n                </div>} />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/imageHome.adcf868c.PNG\";","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Carousel } from 'primereact/carousel';\nimport imageHome from '../images/imageHome.PNG'\nimport axios from \"axios\";\nimport { Card } from 'primereact/card';\n\n\nconst Home = () => {\n    const [products, setProducts] = useState(null);\n    const [status, setStatus] = useState(404);\n    const [recipecards, setRecipeCards] = useState([]);\n\n    useLayoutEffect(() => {\n        fetchProducts();\n     }, []);\n\n    useEffect(() => {\n        if (products) {\n            products.forEach(product => {\n                let allRecipes = recipecards;\n                allRecipes.push (\n                    <React.Fragment key={product.id}>\n                        <Card title={product.name} header={<img src={product.imageurl}></img>} style={{ width: '33em'}}/>\n                    </React.Fragment>\n                );\n                setRecipeCards(allRecipes);\n            })\n        }\n     }, [products]);\n\n     const fetchProducts = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes\",\n        }).catch(error => {\n            return { error: error };\n        });\n        setProducts(res.data);\n        if (res.status === 200) {\n            setStatus(200);\n        }\n    };\n  \n    const itemTemplate = (recipes) => {\n      return recipes;\n    }\n  \n\n    return (\n        <div className=\"home\">\n            <div className=\"row\">\n            <img alt=\"Let's get Cooking\" src={imageHome} ></img>\n            <img alt=\"Bild\" src=\"\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} height=\"500\" ></img>\n            </div>\n         <div className=\"card\">\n         <Carousel value={recipecards} itemTemplate={itemTemplate} numVisible={3} numScroll={1} circular\n                    autoplayInterval={4000}  />\n         </div>\n         </div>\n    );\n}\nexport default Home;\n","import RecipeCard from './recipeCard';\nimport { Card } from 'primereact/card';\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst RecipesMenu = () => {\n    const [products, setProducts] = useState(null);\n    const [status, setStatus] = useState(404);\n    const [recipecards, setRecipeCards] = useState([]);\n\n    useLayoutEffect(() => {\n        fetchProducts();\n     }, []);\n\n     useEffect(() => {\n        if (products) {\n            products.forEach(product => {\n                let allRecipes = recipecards;\n                allRecipes.push (\n                    <React.Fragment key={product.id}>\n                        <Card className=\"p-mb-2\" title={product.name} subTitle={product.categories} style={{ width: '25em' }} footer={product.averagetimeinminutes + \" Minuten\"} header={product.imageurl}/>\n                    </React.Fragment>\n                );\n                setRecipeCards(allRecipes);\n            })\n        }\n     }, [products]);\n\n    const fetchProducts = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes\",\n        }).catch(error => {\n            return { error: error };\n        });\n\n        setProducts(res.data);\n        if (res.status === 200) {\n            setStatus(200);\n        }\n    };\n\n    //Conditional Rendering\n    if (status === 200) {\n        return (\n            <React.Fragment>\n                {recipecards}\n            </React.Fragment>\n        );\n    }\n    else {\n        return (\n            <React.Fragment>\n                <p>Rezepte konnten nicht geladen werden. Bitte später erneut versuchen.</p>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default RecipesMenu;\n","import React, { Component } from \"react\";\nimport { ListBox } from 'primereact/listbox';\nimport { Button } from 'primereact/button';\nimport { TabView,TabPanel } from 'primereact/tabview';\n\nexport default class Recipe extends Component {\n    constructor(props){\n        super(props);\n    this.state = {\n        selectedIngredient:null,\n        activeIndex:1\n    };\n    this.ingredients = [\n        {name: 'Tomate'},\n        {name: 'Salz'},\n        {name: 'Brot'},\n    ];\n}\n    render() {\n        return (\n            <div class=\"recipe\">\n                <div class=\"recipeTop\">\n                <div class=\"recipeLeft\">\n               <h3>Name</h3>\n               <h4>Kategorien</h4>\n               <img alt=\"bild\" src=\"\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"400px\" />\n               </div>\n               <div class=\"recipeRight\" class=\"p-mt-4\">\n                <Button label=\"Favorit\" icon=\"pi pi-heart\" />\n                <h4>Zutaten</h4>\n                    <ListBox value={this.state.selectedIngredient} options={this.ingredients} onChange={(e) => \n                        this.setState({selectedIngredient: e.value})} optionLabel=\"name\" style={{width: '15rem'}} />\n               <h4>Dauer:</h4>\n               <h4>Schwierigkeit:</h4>\n               <h4>Erstellt von: ... am ...</h4>\n               </div>\n               </div>\n               <div class=\"recipePreparation\">\n               <TabView>\n                        <TabPanel header=\"Schritt 1\">\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                            ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                        </TabPanel>\n                        <TabPanel header=\"Schritt 2\">\n                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                            architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                        voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.</p>\n                        </TabPanel>\n                        <TabPanel header=\"Schritt 3\">\n                            <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati\n                            cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.\n                        Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.</p>\n                        </TabPanel>\n                    </TabView>\n               </div>\n               </div>\n      \n\n        );\n    }\n}","import React, { useState, useCallback, useRef } from \"react\";\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport axios from \"axios\";\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { useHistory } from 'react-router-dom';\n\n/**\n * Component to authenticate the user with email and password.\n *\n * @component\n */\nconst Login = (props) => {\n    const history = useHistory();\n\n    const toast = useRef(null);\n    const [Email, setEmail] = useState(\"\");\n    const [Pass, setPassword] = useState(\"\");\n\n    const handleOnLoginSuccess = useCallback(() => history.push('/'), [history]);\n\n    const showLoginSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Login erfolgreich', detail:\"Sie werden nun weitergeleitet\", life: 2000, closable: false});\n    }\n\n    const showRegistrationSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Registrierung erfolgreich', detail:\"Sie können sich nun anmelden\", life: 2000, closable: false});\n    }\n\n    const showLoginError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Login fehlgeschlagen', detail:'Bitte Eingaben überprüfen', life: 3000, closable: false});\n    }\n\n    const showRegistrationError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Registrierung fehlgeschlagen', detail:'Email Adresse wird bereits verwendet', life: 3000, closable: false});\n    }\n\n    const showNoValidCredentialsError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Registrierung fehlgeschlagen', detail: 'Bitte eine gültige Daten angeben', life: 3000, closable: false});\n    }\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    const clearToast = () => {\n        toast.current.clear();\n    }\n\n    /**\n     * Cheks whether an email is valid\n     * @param {*} email \n     * @returns true or false depending on whether it is a valid email\n     */\n    const validateEmail = (email) => {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n    /**\n     * Request cat pic from thatcopy.pw/catapi\n     * @returns Cat pic webp url\n     */\n    const requestCatPic = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://thatcopy.pw/catapi/rest/\"\n          }).catch(error => {\n            return { error: error };\n          });\n\n          return res.data.webpurl;\n    }\n\n    /**\n     * Sends Email and password to api and checks response\n     */\n    const login = async () => {\n        if (Pass !== \"\") {\n            const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/login\",\n            data: {\n                \"email\": Email,\n                \"password\": Pass\n            }\n          }).catch(error => {\n            return { error: error };\n          });\n\n          console.log(res.data);\n\n          if (res.status === 200) {\n              window.$email = Email.toLowerCase();\n              window.$id = res.data.accountId;\n              showLoginSuccess();\n                sleep(2000).then(r => {\n                    handleOnLoginSuccess();\n                });\n          }\n          else {\n            showLoginError();\n          }\n        }\n        else {\n            showNoValidCredentialsError();\n        }\n    }\n\n    /**\n     * Sends a new email and password to the backend to register a new user\n     */\n    const register = async () => {\n        const mail = Email.toLocaleLowerCase();\n        if (validateEmail(mail) && Pass !== \"\") {\n            const picurl = await requestCatPic();\n            const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/register\",\n            data: {\n                \"email\": mail,\n                \"password\": Pass,\n                \"pictureurl\": picurl\n            }\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n              console.log(res.data);\n              window.$email = res.data.email;\n              window.$id = res.data.id;\n              showRegistrationSuccess();\n          }\n          else {\n              showRegistrationError();\n          }\n        }\n        else {\n            showNoValidCredentialsError();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast} className=\"ToastMsg\" />\n            <div className=\"p-mt-6\" >\n                <div className=\"p-field p-grid\">\n                    <div className=\"p-col\">\n                        <InputText placeholder=\"Email Adresse\" id=\"email\" name=\"Email\" onChange={e => setEmail(e.target.value)} type=\"text\" className=\"email\"/>\n                    </div>\n                </div>\n                \n                <div className=\"p-field p-grid\">\n                    <div className=\"p-col\">\n                        <Password placeholder=\"Password \"id=\"password\" name=\"Password\" onChange={e => setPassword(e.target.value)} type=\"text\" feedback={false} className=\"password\"/>\n                    </div>\n                </div>\n            </div>\n            <Button onClick={login} label=\"Anmelden\" className=\"p-button-primary p-mr-2 p-shadow-1\" />\n            <Button onClick={register} label=\"Registrieren\" className=\"p-button-primary p-shadow-1\" />\n        </React.Fragment>\n    );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\n\n/**\n * Component for showing details of the user and allowing to change the account password.\n *\n * @component\n */\nconst Profile = (props) => {\n    const history = useHistory();\n\n    const toast = useRef(null);\n\n    const [Email, setEmail] = useState(window.$email);\n    const [Pass, setPassword] = useState(\"\");\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    const handleNotLoggedIn = useCallback(() => history.push('/login'), [history]);\n    if (window.$email == null) {\n        handleNotLoggedIn();\n    }\n\n    const showPwChangeSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Passwort erfolgreich geändert', life: 2000, closable: false});\n    }\n\n    const showPwChangeError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Passwort darf nicht leer sein', detail:'Bitte Eingaben überprüfen', life: 3000, closable: false});\n    }\n\n    const clearToast = () => {\n        toast.current.clear();\n    }\n\n    const fetchAccountInfo = async () => {\n        let id;\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/\" + window.$id,\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n              setEmail(res.data.email);\n          }\n    }\n    /**\n     * Sends new Password to backend\n     */\n    const submitPassword = async () => {\n        if (Pass !== \"\")\n        {\n            const res = await axios({\n                method: \"post\",\n                url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/newpw\",\n                data: {\n                    \"accountId\": window.$id,\n                    \"password\": Pass\n                }\n              }).catch(error => {\n                return { error: error };\n              });\n    \n            if (res.status === 200)\n            {\n                showPwChangeSuccess();\n            }\n        }\n        else {\n            showPwChangeError();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast} />\n            <div className=\"p-grid p-fluid\">\n                    <div className=\"p-col-12 p-md-4\">\n                        <div className=\"p-inputgroup\" style={{width:'400px'}}>\n                            <span className=\"p-inputgroup-addon\">\n                                <i className=\"pi pi-user\" ></i>\n                            </span>\n                            <InputText disabled placeholder=\"Email Adresse\" value={Email} onChange={e => setEmail(e.target.value)} />\n                        </div>\n                        <div className=\"p-inputgroup\" style={{width:'400px'}}>\n                            <span className=\"p-inputgroup-addon\">\n                                <i className=\"pi pi-key\" ></i>\n                            </span>\n                            <InputText placeholder=\"... neues Passwort\" value={Pass} onChange={e => setPassword(e.target.value)} />\n                        </div>\n                        <div>\n                        <Button onClick={submitPassword} label=\"Speichern\" className=\"p-button-primary p-mr-2\" />\n                        </div>\n                    </div>\n                </div>\n        </React.Fragment>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useCallback, useRef} from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Slider } from 'primereact/slider';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport axios from \"axios\";\n\n\n\n\nconst CreateRecipe = (props) => {\n    const history = useHistory();\n    const toast = useRef(null);\n    \n    const handleNotLoggedIn = useCallback(() => history.push('/login'), [history]);\n    if (window.$email == null) {\n        handleNotLoggedIn();\n    };\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    };\n\n    const handleOnAddRecipeSuccess = useCallback(() => history.push('/'), [history]);\n\n    const [recipeName, setRecipeName] = useState(\"\");\n    const [recipeImageUrl, setRecipeImageUrl] = useState(\"\");\n    const [recipeavgtime, setRecipeAvgTime] = useState('30');\n    const [recipedifficulty, setRecipeDifficulty] = useState();\n    const [recipeingredients, setRecipeIngredients] = useState(\"\");\n    const [recipeinstruction, setRecipeInstruction] = useState(\"\");\n    const [selectedcategorys, setSelectedCategorys] = useState([]);\n\n    const difficultys = [\n        {name: 'einfach'},\n        {name: 'normal'},\n        {name: 'schwer'}\n    ];\n\n    const categorys = [\n        { name: 'Hauptspeise'},\n        { name: 'Gemüse'},\n        { name: 'Vegetarisch'},\n        { name: 'Auflauf'},\n        { name: 'Nudeln'},\n        { name: 'Suppe'},\n        { name: 'Salat'},\n        { name: 'Backen'},\n        { name: 'Torte'},\n        { name: 'Vegan'}\n    ];\n\n   const changeInputToDefault = () =>{\n       setRecipeName(\"\");\n       setRecipeImageUrl(\"\");\n       setRecipeAvgTime(\"30\");\n       setRecipeDifficulty(); \n       setRecipeIngredients(\"\"); \n       setRecipeInstruction(\"\");\n       setSelectedCategorys([]);\n   };\n    \n   const checkIfInputIsValid = () =>{\n        console.log(recipeName , recipeImageUrl , recipedifficulty , recipeingredients , recipeinstruction , selectedcategorys)\n\n        if(recipedifficulty){\n            if(recipeinstruction !== \"\"){\n                if(recipeingredients !== \"\"){\n                    if(recipeImageUrl !== \"\"){\n                        if(recipeName !== \"\"){\n                            if(selectedcategorys.length == 0){\n                                console.log(\"arrrrraaaay:\"+ selectedcategorys)\n                                showInputValidError(\"Kategorien\");\n                               }   \n                            else{\n                                addRecipe()\n                                console.log(\"Kategorien: \" + recipeName)\n                               }\n                        }   \n                        else{\n                            showInputValidError(\"Rezeptname\");\n                            console.log(\"Rezeptname: \" + recipeName)\n                        }\n                    }\n                    else{\n                        showInputValidError(\"Bild Url\");\n                        console.log(\"Bild Url: \" + recipeImageUrl)\n                    }\n                }\n                else{\n                    showInputValidError(\"Zutaten\");\n                    console.log(\"Zutaten: \" + recipeingredients)\n                }\n            }\n            else{\n                showInputValidError(\"Arbeitsanweisung\");\n                console.log(\"Arbeitsanweisung: \" + recipeinstruction)\n            }\n        }\n        else{\n            showInputValidError(\"Schwierigkeit\");\n            console.log(\"Schwierigkeit: \" + recipedifficulty)\n        }\n    };  \n   const showAddRecipeSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Rezept wurde gespeichert!', detail:\"\", life: 1500, closable: false});\n    };\n\n    const showAddRecipeError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Speichern fehlgeschlagen!', detail:'Bitte versuchen Sie es erneut.', life: 3000, closable: false});\n    };\n\n    const showInputValidError = (entry) => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: (\"Es fehlt \"+ entry + \"!\"), detail:'Bitte alle Felder füllen.', life: 3000, closable: false});\n    };\n\n    const clearToast = () => {\n        toast.current.clear();\n    }\n\n   const addRecipe = async () => {\n       console.log(window.$id);\n       console.log(JSON.stringify(selectedcategorys));\n       console.log(recipedifficulty);\n        const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/create\",\n            data: {\n                \"name\": recipeName,\n                \"imageurl\": recipeImageUrl,\n                \"averagetimeinminutes\": recipeavgtime,\n                \"difficulty\": JSON.stringify(recipedifficulty),\n                \"ingredients\": recipeingredients,\n                \"preparation\": recipeinstruction,\n                \"categories\": JSON.stringify(selectedcategorys),\n                \"creatorId\": window.$id\n            }\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n                changeInputToDefault();\n                showAddRecipeSuccess();\n                sleep(1500).then(r => {\n                    handleOnAddRecipeSuccess();\n                });\n          }\n          else {\n                showAddRecipeError();\n          }\n    }\n\n\n    return (\n        \n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast} className=\"ToastMsg\" />\n            <div className=\"createrecipe\">\n                        <h1 >Rezept erstellen</h1>\n                        <span className=\"recipename\">\n                            <label htmlFor=\"recipename\">Rezeptname: </label>\n                            <br/>\n                            <InputText id=\"recipename\" value={recipeName} onChange={(e) => setRecipeName(e.target.value)} placeholder =\"... Bauernsalat\" /> \n                            <br/>\n                        </span>\n                        <br/>  \n                        <span className=\"recipeimageurl\">\n                            <label htmlFor=\"recipeimageurl\">Bild Url: </label>\n                            <br/>\n                            <InputText id=\"recipeimageurl\" value={recipeImageUrl} onChange={(e) => setRecipeImageUrl(e.target.value)} placeholder =\"... http://link-zum-bild\"/> \n                            <br/>\n                        </span>\n                        <br/>  \n                        <div className=\"recipeavetime\">\n                            <span>Arbeitszeit: {recipeavgtime} Minuten</span>\n                            <br/>\n                            <InputNumber value={recipeavgtime} style={{ width: '12rem', hight: '12rem' }} mode=\"decimal\" onValueChange={(e) => setRecipeAvgTime(e.target.value)} />\n                            <Slider value={recipeavgtime} style={{ width: '12rem', hight: '12rem', margin: \"auto\"  }} onChange={(e) => setRecipeAvgTime(e.value)}  min={0} max={555}/>\n                            \n                        </div>\n                        <div className=\"recipedifficulty\">\n                            <h5>Schwierigkeit</h5>\n                            <SelectButton value={recipedifficulty} options={difficultys} onChange={(e) => setRecipeDifficulty(e.value)} optionLabel=\"name\"/>\n                            \n                        </div>\n                        <div className=\"recipecategory\">\n                            <h5>Zutaten: </h5>\n                            <InputTextarea value={recipeingredients} onChange={(e) => setRecipeIngredients(e.target.value)} placeholder=\"... Eier 3Stk, Milch 300ml, ...\" rows={5} cols={30} autoResize />\n                \n                        </div>\n                        <div className=\"recipecategory\">\n                            <h5>Arbeitsanweisung: </h5>\n                            <InputTextarea value={recipeinstruction} onChange={(e) => setRecipeInstruction(e.target.value)} placeholder=\"... erst Mixen, dann Backen\" rows={5} cols={30} autoResize />\n            \n                        </div>\n                        <div className=\"recipecategory\">\n                            <h5>Kategorien</h5>\n                            <MultiSelect value={selectedcategorys} options={categorys} onChange={(e) => setSelectedCategorys(e.value)} optionLabel=\"name\" filter filterPlaceholder= \"Vegan\" selectionLimit = \"4\" placeholder=\"Wähle eine Kategorie\" display=\"chip\" showSelectAll={false} />\n                            <br/>\n                        </div>\n                        <br/>\n                        <span>\n                             <Button label=\"Rezept einreichen\" icon=\"pi pi-check\" className=\"p-button-success p-buttonset\" onClick={checkIfInputIsValid}/>\n                             <Button label=\"Zurücksetzen\" icon=\"pi pi-replay\" className=\"p-button-raised p-button-danger\" onClick={changeInputToDefault}/>\n                        </span>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default CreateRecipe;\n","import './App.css';\nimport './style.scss';\nimport 'primeflex/primeflex.css';\n\nimport Header from './components/header';\nimport Home from './components/home';\nimport RecipesMenu from './components/recipesMenu';\nimport Recipe from './components/recipe';\nimport Login from './components/login';\nimport Profile from './components/profile';\nimport CreateRecipe from './components/createRecipe';\nimport React from 'react';\n\nimport PrimeReact from \"primereact/api\";\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nPrimeReact.ripple = true;\n\nfunction App() {\n\n  const HomePage=()=>{\n    return (\n    <React.Fragment>\n      <Header></Header>\n      <Home></Home>\n    </React.Fragment> )\n  }\n  const RecipesMenuPage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <RecipesMenu></RecipesMenu>\n      </React.Fragment> )\n  }\n  const RecipePage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <Recipe></Recipe>\n      </React.Fragment> )\n  }\n  const LoginPage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <Login></Login>\n      </React.Fragment> )\n  }\n  const ProfilePage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <Profile></Profile>\n      </React.Fragment> )\n  }\n  const CreateRecipePage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <CreateRecipe></CreateRecipe>\n      </React.Fragment> )\n  }\n    return(\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/menu\">\n              <RecipesMenuPage/>\n            </Route>\n            <Route path=\"/recipe\">\n              <RecipePage/>\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage/>\n            </Route>\n            <Route path=\"/profile\">\n              <ProfilePage/>\n            </Route>\n            <Route path=\"/create\">\n              <CreateRecipePage/>\n            </Route>\n            <Route path=\"/\">\n              <HomePage/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}