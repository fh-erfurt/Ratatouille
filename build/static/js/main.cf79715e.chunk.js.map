{"version":3,"sources":["components/header.jsx","images/Lets_get_.png","images/Cooking.png","components/home.jsx","components/recipeCard.jsx","components/recipesMenu.jsx","components/recipeDetail.jsx","components/login.jsx","components/myRecipes.jsx","components/profile.jsx","components/createRecipe.jsx","components/favoriten.jsx","components/recipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","history","useHistory","navigateToPage","useCallback","path","push","useState","windowEmailActive","setWindowEmailActive","useEffect","window","$email","setCount","items","label","icon","command","start","alt","src","onError","e","target","height","className","model","end","onClick","count","to","authBtn","Home","products","setProducts","setStatus","recipecards","setRecipeCards","useLayoutEffect","fetchProducts","forEach","product","allRecipes","Fragment","title","name","footer","averagetimeinminutes","header","imageurl","style","border","id","a","axios","method","url","catch","error","res","sortArrayRandom","data","status","array","sort","Math","random","LetsGet","width","Cooking","value","itemTemplate","recipes","numVisible","numScroll","responsiveOptions","breakpoint","circular","autoplayInterval","RecipeCard","liked","showlike","setShowLike","toggleLike","$id","pushToRecipeDetailPage","pushToRecipePage","pushToProfilpage","deleteRecipe","chips","categories","category","img","confirmDialog","message","acceptLabel","rejectLabel","accept","subTitle","time","lineHeight","description","RecipesMenu","favorites","setFavorites","console","clear","fetchAllRecipes","tempcardarray","catarray","match","alreadyliked","length","favorite","log","genRecipeCard","favres","reverse","recipe","RecipeDetail","toast","useRef","handleNotLoggedIn","fetchRecipeInfo","changeInputToDefault","recipeID","recipeId","params","setRecipe","recipeName","setRecipeName","recipeImageUrl","setRecipeImageUrl","recipeavgtime","setRecipeAvgTime","recipedifficulty","setRecipeDifficulty","recipeingredients","setRecipeIngredients","recipeinstruction","setRecipeInstruction","selectedcategorys","setSelectedCategorys","difficulty","ingredients","preparation","handleStoreAndCancel","sleep","milliseconds","Promise","resolve","setTimeout","showAddRecipeSuccess","entry","current","show","severity","summary","detail","life","closable","showInputValidError","showAddRecipeImageUrlError","updateRecipe","entry1","cat","JSON","stringify","then","r","ref","htmlFor","onChange","placeholder","mode","onValueChange","min","max","options","optionLabel","rows","cols","autoResize","filter","filterPlaceholder","selectionLimit","display","showSelectAll","Login","Email","setEmail","Pass","setPassword","handleOnLoginSuccess","showNoValidCredentialsError","requestCatPic","webpurl","login","toLowerCase","accountId","register","mail","toLocaleLowerCase","test","picurl","email","type","toggleMask","feedback","MyRecipes","editable","Profile","Pic","setPic","fetchAccountInfo","pictureurl","submitPassword","disabled","CreateRecipe","handleOnAddRecipeSuccess","addRecipe","imageUrl","Favoriten","recipecreatedat","setCreatedAt","dt","Date","convertIsoDateToTimeStamp","createdAt","datestr","getDate","convertMonthNumberToMonthName","getMonth","getFullYear","isoDate","getTime","monatszahl","PrimeReact","ripple","App","HomePage","RecipesMenuPage","LoginPage","ProfilePage","CreateRecipePage","FavoriteRecipe","hashType","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mPAyFeA,EA3EA,SAACC,GAEZ,IAAMC,EAAUC,cAEVC,EAAiBC,uBAAY,SAACC,GAAD,OAAUJ,EAAQK,KAAKD,KAAO,CAACJ,IAElE,EAAkDM,oBAAS,GAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACAC,qBAAU,WACe,MAAjBC,OAAOC,QAAkBH,GAAqB,KAC/C,IAGP,MAA0BF,mBAAS,GAAnC,mBAAcM,GAAd,WAqBMC,EAAQ,CACV,CACIC,MAAO,OACPC,KAAM,mBACNC,QAAQ,WAAMd,EAAe,OAEjC,CACIY,MAAO,UACPC,KAAM,mBACNC,QAAQ,WAAMd,EAAe,WAEjC,CACIY,MAAO,YACPC,KAAM,qBACNC,QAAQ,WAAMd,EAAe,aAEjC,CACIY,MAAO,SACPC,KAAM,mBACNC,QAAQ,WAAMd,EAAe,cAEjC,CACIY,MAAO,YACPC,KAAM,uBACNC,QAAQ,WAAMd,EAAe,iBAI/Be,EAAQ,qBAAKC,IAAI,OAAOC,IAAI,2BAA2BC,QAAS,SAACC,GAAD,OAAOA,EAAEC,OAAOH,IAAI,yCAAyCI,OAAO,KAAKC,UAAU,WAEzJ,OACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,cAAC,UAAD,CAASC,MAAOZ,EAAOI,MAAOA,EAAOS,IACrC,8BArDI,SAACnB,GAAD,OACM,IAAtBA,EACI,cAAC,SAAD,CACAO,MAAM,SACNC,KAAK,uBACLS,UAAU,aACVG,QAAS,WACWf,GAAS,SAAAgB,GAAK,OAAIA,EAAQ,KAC1BlB,OAAOC,OAAS,KAChBH,GAAqB,MAKzC,cAAC,IAAD,CAAMqB,GAAG,SAAT,SACI,cAAC,SAAD,CAAQf,MAAM,QAAQC,KAAK,sBAAsBS,UAAU,iBAuClDM,CAAQvB,Y,+BClFd,MAA0B,sCCA1B,MAA0B,oC,wBCuG1BwB,EA3FF,WACT,MAAgCzB,mBAAS,MAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KAEA,EAA4B3B,mBAAS,KAArC,mBAAe4B,GAAf,WACA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAEAC,2BAAgB,WACZC,MAEA,IAEJ7B,qBAAU,WACFuB,GACAA,EAASO,SAAQ,SAAAC,GACb,IAAIC,EAAaN,EACjBM,EAAWpC,KACP,cAAC,IAAMqC,SAAP,UACI,cAAC,OAAD,CAAMlB,UAAU,OAAOmB,MAAOH,EAAQI,KAAMC,OAAQL,EAAQM,qBAAuB,WAAYC,OAAQ,qBAAK7B,IAAI,UAAUC,IAAKqB,EAAQQ,WAAkBC,MAAO,CAACC,OAAO,iCADvJV,EAAQW,KAIjCf,EAAeK,QAIvB,CAACT,IAKL,IAAMM,EAAa,uCAAG,4BAAAc,EAAA,sEACAC,IAAM,CACpBC,OAAQ,MACRC,IAAK,6DACNC,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MALF,OACZC,EADY,OAOlBzB,EAAY0B,EAAgBD,EAAIE,OACb,MAAfF,EAAIG,QACJ3B,EAAU,KATI,2CAAH,qDAoBbyB,EAAkB,SAACG,GAErB,OADkBA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,OAsBvD,OACI,sBAAKzC,UAAU,cAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,gBAAgBN,IAAI,QAAQC,IAAK+C,EAASC,MAAM,UAC/D,qBAAKjD,IAAI,OAAOC,IAAI,2BAA2BC,QAAS,SAACC,GAAD,OAAOA,EAAEC,OAAOH,IAAI,yCAC5EK,UAAU,cAAc2C,MAAM,UAE9B,qBAAK3C,UAAU,gBAAgBN,IAAI,UAAUC,IAAKiD,EAASD,MAAM,eAGzE,qBAAK3C,UAAU,cAAf,SACI,cAAC,WAAD,CAAUA,UAAU,YAAY6C,MAAOlC,EAAamC,aA1C3C,SAACC,GACpB,OAAOA,GAyCmFC,WAAY,EAAGC,UAAW,EAAGC,kBA9B/F,CACtB,CACIC,WAAY,SACZH,WAAY,EACZC,UAAW,GAEf,CACIE,WAAY,SACZH,WAAY,EACZC,UAAW,GAEf,CACIE,WAAY,QACZH,WAAY,EACZC,UAAW,IAgB2IG,UAAQ,EAC9IC,iBAAkB,Y,gBCmC/BC,EAvHI,SAAC/E,GAChB,MAAgCO,mBAASP,EAAMgF,OAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMjF,EAAUC,cACViF,EAAU,uCAAG,sBAAA9B,EAAA,0DACX1C,OAAOyE,IADI,gCAEO9B,IAAM,CACxBC,OAAQ,OACRC,IAAK,gEACLK,KAAM,CACF,UAAalD,OAAOyE,IACpB,SAAYpF,EAAMoD,MAEnBK,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MAVT,OAcQ,MAdR,OAcHI,QAEAoB,GADa,IAAbD,GAfG,2CAAH,qDAyBVI,EAAyBjF,uBAAY,kBAAMH,EAAQK,KAAK,gBAAiBN,EAAMoD,MAAK,CAACnD,EAASD,EAAMoD,KACpGkC,EAAmBlF,uBAAY,kBAAMH,EAAQK,KAAK,WAAYN,EAAMoD,MAAK,CAACnD,EAASD,EAAMoD,KAEzFmC,EAAmBnF,uBAAY,kBAAMH,EAAQK,KAAK,QAClDkF,EAAY,uCAAE,sBAAAnC,EAAA,0DACZ1C,OAAOyE,IADK,gCAGM9B,IAAM,CACxBC,OAAQ,SACRC,IAAK,6EAA8ExD,EAAMoD,GACzFS,KAAM,CACF,UAAalD,OAAOyE,OAErB3B,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MAVR,cAYZ6B,IAZY,2CAAF,qDA0BdE,EAAQ,GACZzF,EAAM0F,WAAWlD,SAAQ,SAACmD,GACtBF,EAAMnF,KACF,cAAC,OAAD,CAAMS,MAAO4E,EAAUlE,UAAU,6CAIzC,IAIIqB,EAJEE,EACF,qBAAK7B,IAAI,OAAOM,UAAU,gBAAgBL,IAAI,oCAAoCC,QAAS,SAACC,GAAD,OAAOA,EAAEC,OAAOH,IAAIpB,EAAM4F,OAyCzH,OArCIjF,OAAOyE,KACU,IAAbH,EACJnC,EACI,iCACI,cAAC,SAAD,CAAQrB,UAAU,qBAAqBV,MAAM,GAAGC,KAAK,wBAAwBY,QAAS0D,IACtF,cAAC,SAAD,CAAQ7D,UAAU,4BAA4BV,MAAM,UAAUC,KAAK,aAAaY,QAASuD,QAI3E,IAAbF,EACLnC,EACI,iCACI,cAAC,SAAD,CAAQrB,UAAU,qBAAqBV,MAAM,GAAGC,KAAK,wBAAwBY,QAAS0D,IACtF,cAAC,SAAD,CAAQ7D,UAAU,4BAA4BV,MAAM,SAASC,KAAK,eAAeY,QAASuD,OAIhF,aAAbF,IACLnC,EACI,iCACK,cAAC,SAAD,CAAQrB,UAAU,0CAA0CV,MAAM,GAAGC,KAAK,wBAAwBY,QAAS0D,IAC3G,cAAC,SAAD,CAAQ7D,UAAU,0CAA0CV,MAAM,GAAGC,KAAK,eAAeY,QAASyD,IAClG,cAAC,SAAD,CAAQ5D,UAAU,8CAA8CV,MAAM,GAAGC,KAAK,cAAcY,QA7C5F,WACbiE,wBAAc,CACVC,QAAS,6CACT9C,OAAQ,aACRhC,KAAM,6BACN+E,YAAa,KACbC,YAAa,OACbC,OAAQ,kBAAMT,cA4ClB1C,EACI,+BACI,cAAC,SAAD,CAAQrB,UAAU,sBAAsBV,MAAM,GAAGC,KAAK,wBAAwBY,QAAS0D,MAQ/F,qBAAK7D,UAAU,+BAAf,SACI,eAAC,OAAD,CAAMA,UAAU,cAAcmB,MAAO5C,EAAM6C,KAAMqD,SAAUlG,EAAMmG,KAAMjD,MAAO,CAAE,aAAc,sEAAwEJ,OAAQA,EAAQE,OAAQA,EAA9L,UACI,mBAAGvB,UAAU,QAAQyB,MAAO,CAACkD,WAAY,OAAzC,SAAkDpG,EAAMqG,cACxD,qBAAK5E,UAAU,cAAf,SACKgE,UCPNa,EA7GK,WAChB,MAAgC/F,mBAAS,MAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAAkC3B,mBAAS,MAA3C,mBAAOgG,EAAP,KAAkBC,EAAlB,KACA,EAA4BjG,mBAAS,KAArC,mBAAOuD,EAAP,KAAe3B,EAAf,KACA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAEAC,2BAAgB,WACZmE,QAAQC,QACRC,MACA,IAEHrE,2BAAgB,WACb,GAAIL,EAAU,CACV,IAAI2E,EAAgB,GACpB3E,EAASO,SAAQ,SAAAC,GACb,IAAMoE,EAAWpE,EAAQiD,WAAWoB,MAAM,8CACtCC,GAAe,EAEF,MAAbR,GAAqBA,EAAUS,OAAS,GACxCT,EAAU/D,SAAQ,SAAAyE,GACVxE,EAAQW,KAAO6D,EAAS7D,KACxB2D,GAAe,MAI3BN,QAAQS,IAAIH,GACZH,EAActG,KAAK6G,EAAc1E,EAASsE,EAAcF,OAE5DxE,EAAeuE,QAGfH,QAAQS,IAAI,iBAGhB,CAACjF,EAAUsE,IAKf,IAAMI,EAAe,uCAAG,8BAAAtD,EAAA,sEACFC,IAAM,CACpBC,OAAQ,MACRC,IAAK,2DACLK,KAAM,CACF,UAAalD,OAAOyE,OAEzB3B,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MARA,UACdC,EADc,QAYhBhD,OAAOyE,IAZS,uBAahBqB,QAAQS,IAAI,6CAA+CvG,OAAOyE,KAblD,SAcK9B,IAAM,CAC3BC,OAAQ,OACRC,IAAK,uEACLK,KAAM,CACF,UAAalD,OAAOyE,OAErB3B,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MArBJ,OAyBM,OAXhB0D,EAdU,QAyBLtD,OACP0C,EAAaY,EAAOvD,MAGpB2C,EAAa,IA7BD,OAiCpBtE,EAAYyB,EAAIE,KAAKwD,WACF,MAAf1D,EAAIG,QACJ3B,EAAU,KAnCM,4CAAH,qDA0CfgF,EAAgB,SAACG,EAAQP,EAAcF,GAKzC,OAHI,cAAC,EAAD,CAAYpF,UAAU,oBAAoB2B,GAAIkE,EAAOlE,GAAoB4B,MAAO+B,EAAcnB,IAAK0B,EAAOrE,SAAUyC,WAAYmB,EAAU3D,MAAO,CAAEkB,MAAO,QAAUvB,KAAMyE,EAAOzE,KAAMsD,KAAMmB,EAAOvE,qBAAuB,YAA7JuE,EAAOlE,KAO7E,OAAe,MAAXU,EAEI,cAAC,IAAMnB,SAAP,UACI,qBAAKlB,UAAU,sBAAf,SACKW,MAQT,cAAC,IAAMO,SAAP,UACI,2D,wDC+LD4E,EA9RM,SAACvH,GAClB,IAAMC,EAAUC,cACVsH,EAAQC,iBAAO,MAKfC,EAAoBtH,uBAAY,kBAAMH,EAAQK,KAAK,YAAW,CAACL,IAChD,MAAjBU,OAAOC,QACP8G,IAGJhH,qBAAU,WACNiH,KACAC,MAEF,IAEF,IACMC,EAAW7H,EAAM8H,SAAShB,MAAMiB,OAAOD,SAC7C,EAA4BvH,mBAAS,IAArC,mBAAO+G,EAAP,KAAeU,EAAf,KACA,EAAoCzH,mBAAS,IAA7C,mBAAO0H,EAAP,KAAmBC,EAAnB,KACA,EAA4C3H,mBAAS,IAArD,mBAAO4H,EAAP,KAAuBC,EAAvB,KACA,EAA0C7H,mBAAS,MAAnD,mBAAO8H,EAAP,KAAsBC,EAAtB,KACA,EAAgD/H,qBAAhD,mBAAOgI,EAAP,KAAyBC,EAAzB,KACA,EAAkDjI,mBAAS,IAA3D,mBAAOkI,EAAP,KAA0BC,EAA1B,KACA,EAAkDnI,mBAAS,IAA3D,mBAAOoI,EAAP,KAA0BC,EAA1B,KACA,EAAkDrI,mBAAS,IAA3D,mBAAOsI,EAAP,KAA0BC,EAA1B,KAwCKlB,EAAuB,WACzBM,EAAcZ,EAAOzE,MACrBuF,EAAkBd,EAAOrE,UACzBqF,EAAiBhB,EAAOvE,sBACxByF,EAAoB,CAAC3F,KAAKyE,EAAOyB,aACjCL,EAAqBpB,EAAO0B,aAC5BJ,EAAqBtB,EAAO2B,cAIzBC,GAAuB9I,uBAAY,kBAAMH,EAAQK,KAAK,eAAc,CAACL,IAKrE0H,GAAe,uCAAG,4BAAAtE,EAAA,sEACFC,IAAM,CACpBC,OAAQ,MACRC,IAAK,mEAAqEqE,IACzEpE,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MALA,OAQC,OAPfC,EADc,QAQVG,SACJkE,EAAUrE,EAAIE,MACd4C,QAAQS,IAAIvD,EAAIE,MAChBqE,EAAcvE,EAAIE,KAAKhB,MACvBuF,EAAkBzE,EAAIE,KAAKZ,UAC3BqF,EAAiB3E,EAAIE,KAAKd,sBAC1ByF,EAAoB,CAAC3F,KAAKc,EAAIE,KAAKkF,aACnCL,EAAqB/E,EAAIE,KAAKmF,aAC9BJ,EAAqBjF,EAAIE,KAAKoF,cAhBhB,2CAAH,qDAoBfE,GAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAkE7CI,GAAuB,SAACC,GACzBjC,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,UAAWC,QAAS,4BAA6BC,OAAQL,EAAQM,KAAM,KAAMC,UAAU,KASlHC,GAAsB,SAACR,GACzBjC,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAU,YAAaJ,EAAQ,IAAMK,OAAO,+BAA6BC,KAAM,IAAMC,UAAU,KAGnIE,GAA6B,WAC/B1C,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,4BAA0BC,OAAO,kFAAmFC,KAAM,IAAMC,UAAU,KAU3LG,GAAY,uCAAG,WAAOV,EAAOW,GAAd,eAAA/G,EAAA,6DACjBoD,QAAQS,IAAI,6BACRL,EAAW,GACfJ,QAAQS,IAAIvG,OAAOyE,KACnByD,EAAkBrG,SAAQ,SAAA6H,GACtBxD,EAASvG,KAAK+J,EAAIxH,SALL,SAOES,IAAM,CACpBC,OAAQ,MACRC,IAAK,2EAA6EqE,EAClFhE,KAAM,CACF,KAAQoE,EACR,SAAYmC,EACZ,qBAAwB/B,EACxB,WAAcE,EAAiB1F,KAC/B,YAAe4F,EACf,YAAeE,EACf,WAAc2B,KAAKC,UAAU1D,GAC7B,UAAalG,OAAOyE,OAEvB3B,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MArBJ,OAwBK,MAxBL,OAwBNI,QACF8D,IACA4B,GAAqBC,GACrBN,GAAM,MAAMqB,MAAK,SAAAC,GACbvB,UAjDT1B,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,4BAA6BC,OAAO,iCAAkCC,KAAM,IAAMC,UAAU,KAoB9H,2CAAH,wDAoCnB,OACK,eAAC,IAAMrH,SAAP,WACI,cAAC,QAAD,CAAO+H,IAAKlD,EAAO5F,QA7CJ,WACf4F,EAAMkC,QAAQhD,SA4C2BjF,UAAU,aACnD,sBAAKA,UAAU,gCAAf,UACY,mDACA,uBAAMA,UAAU,aAAhB,UACI,oBAAIkJ,QAAQ,aAAZ,0BACA,cAAC,YAAD,CAAWlJ,UAAU,wBAAwB2B,GAAG,aAAakB,MAAO2D,EAAY2C,SAAU,SAACtJ,GAAD,OAAO4G,EAAc5G,EAAEC,OAAO+C,QAAQuG,YAAa,oBAC7I,0BAEJ,uBACA,uBAAMpJ,UAAU,iBAAhB,UACI,oBAAIkJ,QAAQ,iBAAZ,wBACA,cAAC,YAAD,CAAWlJ,UAAU,wBAAwB2B,GAAG,iBAAiBkB,MAAO6D,EAAgByC,SAAU,SAACtJ,GAAD,OAAO8G,EAAkB9G,EAAEC,OAAO+C,QAAQuG,YAAa,6BACzJ,0BAEJ,uBACA,sBAAKpJ,UAAU,GAAf,UACI,+CAAkB4G,EAAlB,WACA,cAAC,cAAD,CAAa5G,UAAU,6BAA6B6C,MAAO+D,EAAeyC,KAAK,UAAUC,cAAe,SAACzJ,GAAD,OAAOgH,EAAiBhH,EAAEC,OAAO+C,UACzI,cAAC,SAAD,CAAQ7C,UAAU,uCAAuC6C,MAAO+D,EAAeuC,SAAU,SAACtJ,GAAD,OAAOgH,EAAiBhH,EAAEgD,QAAS0G,IAAK,EAAGC,IAAK,SAG7I,sBAAKxJ,UAAU,GAAf,UACI,+CACA,cAAC,eAAD,CAAc6C,MAAOiE,EAAkB2C,QArO3C,CAChB,CAACrI,KAAM,WACP,CAACA,KAAM,UACP,CAACA,KAAM,WAkO0E+H,SAAU,SAACtJ,GAAD,OAAOkH,EAAoBlH,EAAEgD,QAAQ6G,YAAY,YAG5H,sBAAK1J,UAAU,GAAf,UACI,2CACA,cAAC,gBAAD,CAAgBA,UAAU,wBAAwB6C,MAAOmE,EAAmBmC,SAAU,SAACtJ,GAAD,OAAOoH,EAAqBpH,EAAEC,OAAO+C,QAAQuG,YAAY,kCAAkCO,KAAM,EAAGC,KAAM,GAAIC,YAAU,OAGlN,sBAAK7J,UAAU,GAAf,UACI,oDACA,cAAC,gBAAD,CAAeA,UAAU,wBAAwB6C,MAAOqE,EAAmBiC,SAAU,SAACtJ,GAAD,OAAOsH,EAAqBtH,EAAEC,OAAO+C,QAAQuG,YAAY,8BAA8BO,KAAM,EAAGC,KAAM,GAAIC,YAAU,OAG7M,sBAAK7J,UAAU,GAAf,UACI,4CACA,cAAC,cAAD,CAAa6C,MAAOuE,EAAmBqC,QA9O7C,CACd,CAAErI,KAAM,eACR,CAAEA,KAAM,aACR,CAAEA,KAAM,eACR,CAAEA,KAAM,WACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WACR,CAAEA,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,mBACR,CAAEA,KAAM,QACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,aACR,CAAEA,KAAM,mBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,gBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,UAiNuE+H,SAAU,SAACtJ,GAAD,OAAOwH,EAAqBxH,EAAEgD,QAAQ6G,YAAY,OAAOI,QAAM,EAACC,kBAAmB,cAAcC,eAAiB,IAAIZ,YAAY,0BAAuBa,QAAQ,OAAOC,eAAe,IAC5P,0BAEJ,uBACA,iCACK,cAAC,SAAD,CAAQ5K,MAAM,YAAYC,KAAK,cAAcS,UAAU,gDAAgDG,QA5KjG,WACvB6E,QAAQS,IAAIe,EAAaE,EAAiBI,EAAmBE,EAAoBE,EAAoBE,GAElGN,EAC0B,KAAtBI,EAC0B,KAAtBF,EACuB,KAAnBN,EACsE,MAAlEA,EAAerB,MAAM,0CACF,KAAfmB,EACiC,IAA7BY,EAAkB7B,QACjBP,QAAQS,IAAI,eAAgB2B,GAC5BoB,GAAoB,gBAGpBE,GAAa,GAAIhC,GACjB1B,QAAQS,IAAI,eAAiB2B,KAIjCoB,GAAoB,cACpBxD,QAAQS,IAAI,eAAiBe,IAKjCiC,KAOc,KAAfjC,EACiC,IAA7BY,EAAkB7B,QACjBP,QAAQS,IAAI,eAAgB2B,GAC5BoB,GAAoB,gBAGpBE,GAAa,2BA9HxB,sGA+HW1D,QAAQS,IAAI,eAAiB2B,KAIjCoB,GAAoB,cACpBxD,QAAQS,IAAI,eAAiBe,KAKrCgC,GAAoB,WACpBxD,QAAQS,IAAI,YAAcuB,KAI9BwB,GAAoB,oBACpBxD,QAAQS,IAAI,qBAAuByB,KAIvCsB,GAAoB,iBACpBxD,QAAQS,IAAI,kBAAoBqB,OAiHnB,cAAC,SAAD,CAAQxH,MAAM,kBAAeC,KAAK,eAAeS,UAAU,oCAAoCG,QAASgG,IACxG,cAAC,SAAD,CAAQ7G,MAAM,YAAYC,KAAK,cAAcS,UAAU,mCAAmCG,QAASsH,e,QC3HjH0C,EAjKD,SAAC5L,GACX,IAAMC,EAAUC,cAEVsH,EAAQC,iBAAO,MACrB,EAA0BlH,mBAAS,IAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAA4BvL,mBAAS,IAArC,mBAAOwL,EAAP,KAAaC,EAAb,KAEMC,EAAuB7L,uBAAY,kBAAMH,EAAQK,KAAK,OAAM,CAACL,IAsB7DiM,EAA8B,WAChC1E,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,+BAAgCC,OAAQ,sCAAoCC,KAAM,IAAMC,UAAU,KAG/Ib,EAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAqBhD+C,EAAa,uCAAG,4BAAA9I,EAAA,sEACAC,IAAM,CACpBC,OAAQ,MACRC,IAAK,qCACJC,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MALF,cACZC,EADY,yBAQTA,EAAIE,KAAKuI,SARA,2CAAH,qDAcbC,EAAK,uCAAG,4BAAAhJ,EAAA,yDACG,KAAT0I,EADM,gCAEYzI,IAAM,CACxBC,OAAQ,OACRC,IAAK,oEACLK,KAAM,CACF,MAASgI,EACT,SAAYE,KAEftI,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MAVV,OAEAC,EAFA,OAaR8C,QAAQS,IAAIvD,EAAIE,MAEG,MAAfF,EAAIG,QACJnD,OAAOC,OAASiL,EAAMS,cACtB3L,OAAOyE,IAAMzB,EAAIE,KAAK0I,UA7E5B/E,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,UAAWC,QAAS,oBAAqBC,OAAO,gCAAiCC,KAAM,IAAMC,UAAU,IA8E5Hb,EAAM,KAAMqB,MAAK,SAAAC,GACbwB,SAtEZzE,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,uBAAwBC,OAAO,kCAA6BC,KAAM,IAAMC,UAAU,KAiDvH,sBA4BNkC,IA5BM,2CAAH,qDAmCLM,EAAQ,uCAAG,gCAAAnJ,EAAA,yDACPoJ,EAAOZ,EAAMa,qBA1DV,wJACDC,KA0DUF,IAAkB,KAATV,EAFd,iCAGYI,IAHZ,cAGHS,EAHG,gBAIStJ,IAAM,CACxBC,OAAQ,OACRC,IAAK,uEACLK,KAAM,CACF,MAAS4I,EACT,SAAYV,EACZ,WAAca,KAEjBnJ,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MAbP,OAgBQ,OAZXC,EAJG,QAgBHG,QACJ2C,QAAQS,IAAIvD,EAAIE,MAChBlD,OAAOC,OAAS+C,EAAIE,KAAKgJ,MACzBlM,OAAOyE,IAAMzB,EAAIE,KAAKT,GA7G5BoE,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,UAAWC,QAAS,4BAA6BC,OAAO,kCAAgCC,KAAM,IAAMC,UAAU,MAS3IxC,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,+BAAgCC,OAAO,uCAAwCC,KAAM,IAAMC,UAAU,KA+EvI,wBA2BTkC,IA3BS,4CAAH,qDA+Bd,OACI,eAAC,IAAMvJ,SAAP,WACI,cAAC,QAAD,CAAO+H,IAAKlD,EAAO5F,QApGR,WACf4F,EAAMkC,QAAQhD,SAmG8BjF,UAAU,aAC9C,sBAAKA,UAAU,uCAAf,UACQ,sBAAKA,UAAU,eAAf,UACI,sBAAMA,UAAU,qBAAhB,SACI,mBAAGA,UAAU,iBAEjB,cAAC,YAAD,CAAWoJ,YAAY,gBAAgBzH,GAAG,QAAQP,KAAK,QAAQ+H,SAAU,SAAAtJ,GAAC,OAAIwK,EAASxK,EAAEC,OAAO+C,QAAQwI,KAAK,YAEjH,sBAAKrL,UAAU,sBAAf,UACI,sBAAMA,UAAU,qBAAhB,SACI,mBAAGA,UAAU,gBAEjB,cAAC,WAAD,CAAUsL,YAAU,EAAClC,YAAY,YAAWzH,GAAG,WAAWP,KAAK,WAAW+H,SAAU,SAAAtJ,GAAC,OAAI0K,EAAY1K,EAAEC,OAAO+C,QAAQwI,KAAK,OAAOE,UAAU,OAEhJ,sBAAKvL,UAAU,iBAAf,UACI,cAAC,SAAD,CAAQG,QAASyK,EAAOtL,MAAM,WAAWU,UAAU,uCACnD,cAAC,SAAD,CAAQG,QAAS4K,EAAUzL,MAAM,eAAeU,UAAU,0CCnFvEwL,EA3EG,WACd,MAAgC1M,mBAAS,MAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAA4B3B,mBAAS,KAArC,mBAAOuD,EAAP,KAAe3B,EAAf,KACA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAEAC,2BAAgB,WACZC,MACA,IAEHD,2BAAgB,WACb,GAAIL,EAAU,CACV,IAAI2E,EAAgB,GACpB3E,EAASO,SAAQ,SAAAC,GACb,IAAMoE,EAAWpE,EAAQiD,WAAWoB,MAAM,8CAE1CF,EAActG,KAAK6G,EAAc1E,EAASoE,OAE9CxE,EAAeuE,MAGnB,CAAC3E,IAKL,IAAMM,EAAa,uCAAG,4BAAAc,EAAA,sEACAC,IAAM,CACpBC,OAAQ,OACRC,IAAK,qEACLK,KAAM,CACF,UAAalD,OAAOyE,OAEzB3B,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MARF,OACZC,EADY,OAWlBzB,EAAYyB,EAAIE,MACG,MAAfF,EAAIG,QACJ3B,EAAU,KAbI,2CAAH,qDAoBbgF,EAAgB,SAACG,EAAQT,GAO3B,OALI,cAAC,IAAMlE,SAAP,UACI,cAAC,EAAD,CAAYqC,MAAM,WAAWvD,UAAU,oBAAoB2B,GAAIkE,EAAOlE,GAAoB8J,UAAU,EAAMtH,IAAK0B,EAAOrE,SAAUyC,WAAYmB,EAAU3D,MAAO,CAAEkB,MAAO,QAAUvB,KAAMyE,EAAOzE,KAAMsD,KAAMmB,EAAOvE,qBAAuB,YAAxJuE,EAAOlE,KADrEkE,EAAOlE,KASpC,OAAe,MAAXU,EAEI,cAAC,IAAMnB,SAAP,UACI,qBAAKlB,UAAU,sBAAf,SACKW,MAQT,cAAC,IAAMO,SAAP,UACI,2DCiDDwK,EAlHC,SAACnN,GACb,IAAMC,EAAUC,cAEVsH,EAAQC,iBAAO,MAErB,EAA0BlH,mBAAS,IAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAA4BvL,mBAAS,IAArC,mBAAOwL,EAAP,KAAaC,EAAb,KACA,EAAsBzL,mBAAS,IAA/B,mBAAO6M,EAAP,KAAYC,EAAZ,KAEA3M,qBAAU,WACN4M,OAMJ,IAAM5F,EAAoBtH,uBAAY,kBAAMH,EAAQK,KAAK,YAAW,CAACL,IAChD,MAAjBU,OAAOC,QACP8G,IAGJ,IAkBM4F,EAAgB,uCAAG,4BAAAjK,EAAA,sEACHC,IAAM,CACpBC,OAAQ,MACRC,IAAK,+DAAiE7C,OAAOyE,MAC5E3B,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MALC,OAQA,OAPfC,EADe,QAQXG,SACJgI,EAASnI,EAAIE,KAAKgJ,OAClBQ,EAAO1J,EAAIE,KAAK0J,aAVD,2CAAH,qDAiBhBC,EAAc,uCAAG,sBAAAnK,EAAA,yDACN,KAAT0I,EADe,gCAGGzI,IAAM,CACpBC,OAAQ,OACRC,IAAK,oEACLK,KAAM,CACF,UAAalD,OAAOyE,IACpB,SAAY2G,KAEftI,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MAXL,OAcI,MAdJ,OAcPI,SAhDZ0D,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,UAAWC,QAAS,mCAAiCE,KAAM,IAAMC,UAAU,KAiCrF,sBA7BnBxC,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,gCAAiCC,OAAO,kCAA6BC,KAAM,IAAMC,UAAU,IA4BvH,2CAAH,qDAwBpB,OACI,eAAC,IAAMrH,SAAP,WACI,cAAC,QAAD,CAAO+H,IAAKlD,EAAO5F,QAnDR,WACf4F,EAAMkC,QAAQhD,WAmDV,qBAAKjF,UAAU,wBAAf,SACQ,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,+BAA+BL,IAAKgM,EAAKjM,IAAI,YAC5D,sBAAKM,UAAU,eAAf,UACI,sBAAMA,UAAU,qBAAhB,SACI,mBAAGA,UAAU,iBAEjB,cAAC,YAAD,CAAWgM,UAAQ,EAAC5C,YAAY,gBAAgBvG,MAAOuH,EAAOjB,SAAU,SAAAtJ,GAAC,OAAIwK,EAASxK,EAAEC,OAAO+C,aAEnG,sBAAK7C,UAAU,sBAAf,UACI,sBAAMA,UAAU,qBAAhB,SACI,mBAAGA,UAAU,gBAEjB,cAAC,YAAD,CAAWoJ,YAAY,iBAAiBvG,MAAOyH,EAAMnB,SAAU,SAAAtJ,GAAC,OAAI0K,EAAY1K,EAAEC,OAAO+C,aAE7F,8BACA,cAAC,SAAD,CAAQ1C,QAAS4L,EAAgBzM,MAAM,YAAYU,UAAU,0DAMzE,qBAAKA,UAAU,6BAAf,SACI,cAAC,EAAD,UCsJLiM,EA7PM,SAAC1N,GAClB,IAAMC,EAAUC,cACVsH,EAAQC,iBAAO,MAKfC,EAAoBtH,uBAAY,kBAAMH,EAAQK,KAAK,YAAW,CAACL,IAChD,MAAjBU,OAAOC,QACP8G,IAGJ,IAAMyB,EAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGhDuE,EAA2BvN,uBAAY,kBAAMH,EAAQK,KAAK,OAAM,CAACL,IAEvE,EAAoCM,mBAAS,IAA7C,mBAAO0H,EAAP,KAAmBC,EAAnB,KACA,EAA4C3H,mBAAS,IAArD,mBAAO4H,EAAP,KAAuBC,EAAvB,KACA,EAA0C7H,mBAAS,MAAnD,mBAAO8H,EAAP,KAAsBC,EAAtB,KACA,EAAgD/H,qBAAhD,mBAAOgI,EAAP,KAAyBC,EAAzB,KACA,EAAkDjI,mBAAS,IAA3D,mBAAOkI,EAAP,KAA0BC,EAA1B,KACA,EAAkDnI,mBAAS,IAA3D,mBAAOoI,EAAP,KAA0BC,EAA1B,KACA,EAAkDrI,mBAAS,IAA3D,mBAAOsI,EAAP,KAA0BC,EAA1B,KAwCKlB,EAAuB,WACzBM,EAAc,IACdE,EAAkB,IAClBE,EAAiB,MACjBE,IACAE,EAAqB,IACrBE,EAAqB,IACrBE,EAAqB,KAmElBU,EAAuB,SAACC,GAC1BjC,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,UAAWC,QAAS,4BAA6BC,OAAQL,EAAQM,KAAM,KAAMC,UAAU,KASlHC,EAAsB,SAACR,GACzBjC,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAU,YAAaJ,EAAQ,IAAMK,OAAO,+BAA6BC,KAAM,IAAMC,UAAU,KAGnIE,EAA6B,WAC/B1C,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,4BAA0BC,OAAO,kFAAmFC,KAAM,IAAMC,UAAU,KAUvL4D,GAAS,uCAAG,WAAOnE,EAAMoE,GAAb,eAAAxK,EAAA,6DACfoD,QAAQS,IAAI,6BACRL,EAAW,GACfJ,QAAQS,IAAIvG,OAAOyE,KACnByD,EAAkBrG,SAAQ,SAAA6H,GACtBxD,EAASvG,KAAK+J,EAAIxH,SALP,SAOIS,IAAM,CACpBC,OAAQ,OACRC,IAAK,kEACLK,KAAM,CACF,KAAQoE,EACR,SAAY4F,EACZ,qBAAwBxF,EACxB,WAAcE,EAAiB1F,KAC/B,YAAe4F,EACf,YAAeE,EACf,WAAc2B,KAAKC,UAAU1D,GAC7B,UAAalG,OAAOyE,OAEvB3B,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MArBN,OAwBO,MAxBP,OAwBJI,QACF8D,IACA4B,EAAqBC,GACrBN,EAAM,MAAMqB,MAAK,SAAAC,GACbkD,SAjDZnG,EAAMkC,QAAQhD,QACdc,EAAMkC,QAAQC,KAAK,CAACC,SAAS,QAASC,QAAS,4BAA6BC,OAAO,iCAAkCC,KAAM,IAAMC,UAAU,KAoB7H,2CAAH,wDAoCf,OACI,eAAC,IAAMrH,SAAP,WACI,cAAC,QAAD,CAAO+H,IAAKlD,EAAO5F,QA7CR,WACf4F,EAAMkC,QAAQhD,SA4C8BjF,UAAU,aAClD,sBAAKA,UAAU,gCAAf,UACY,kDACA,uBAAMA,UAAU,GAAhB,UACI,oBAAIkJ,QAAQ,aAAZ,0BACA,cAAC,YAAD,CAAWlJ,UAAU,wBAAwB2B,GAAG,aAAakB,MAAO2D,EAAY2C,SAAU,SAACtJ,GAAD,OAAO4G,EAAc5G,EAAEC,OAAO+C,QAAQuG,YAAa,mBAEjJ,uBACA,uBAAMpJ,UAAU,GAAhB,UACI,oBAAIkJ,QAAQ,iBAAZ,wBACA,cAAC,YAAD,CAAWlJ,UAAU,wBAAwB2B,GAAG,iBAAiBkB,MAAO6D,EAAgByC,SAAU,SAACtJ,GAAD,OAAO8G,EAAkB9G,EAAEC,OAAO+C,QAAQuG,YAAa,4BAE7J,uBACA,sBAAKpJ,UAAU,GAAf,UACI,+CAAkB4G,EAAlB,WACA,cAAC,cAAD,CAAa5G,UAAU,uBAAuB6C,MAAO+D,EAAeyC,KAAK,UAAUC,cAAe,SAACzJ,GAAD,OAAOgH,EAAiBhH,EAAEC,OAAO+C,UACnI,cAAC,SAAD,CAAQ7C,UAAU,iCAAiC6C,MAAO+D,EAAeuC,SAAU,SAACtJ,GAAD,OAAOgH,EAAiBhH,EAAEgD,QAAS0G,IAAK,EAAGC,IAAK,SAGvI,sBAAKxJ,UAAU,mBAAf,UACI,+CACA,cAAC,eAAD,CAAc6C,MAAOiE,EAAkB2C,QAvM3C,CAChB,CAACrI,KAAM,WACP,CAACA,KAAM,UACP,CAACA,KAAM,WAoM0E+H,SAAU,SAACtJ,GAAD,OAAOkH,EAAoBlH,EAAEgD,QAAQ6G,YAAY,YAG5H,sBAAK1J,UAAU,GAAf,UACI,2CACA,cAAC,gBAAD,CAAeA,UAAU,wBAAwB6C,MAAOmE,EAAmBmC,SAAU,SAACtJ,GAAD,OAAOoH,EAAqBpH,EAAEC,OAAO+C,QAAQuG,YAAY,8BAA8BO,KAAM,EAAGC,KAAM,GAAIC,YAAU,OAG7M,sBAAK7J,UAAU,GAAf,UACI,oDACA,cAAC,gBAAD,CAAeA,UAAU,wBAAwB6C,MAAOqE,EAAmBiC,SAAU,SAACtJ,GAAD,OAAOsH,EAAqBtH,EAAEC,OAAO+C,QAAQuG,YAAY,+BAA+BO,KAAM,EAAGC,KAAM,GAAIC,YAAU,OAG9M,sBAAK7J,UAAU,GAAf,UACI,4CACA,cAAC,cAAD,CAAc6C,MAAOuE,EAAmBqC,QAhN9C,CACd,CAAErI,KAAM,eACR,CAAEA,KAAM,aACR,CAAEA,KAAM,eACR,CAAEA,KAAM,WACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WACR,CAAEA,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,mBACR,CAAEA,KAAM,QACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,aACR,CAAEA,KAAM,mBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,gBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,UAmLwE+H,SAAU,SAACtJ,GAAD,OAAOwH,EAAqBxH,EAAEgD,QAAQ6G,YAAY,OAAOI,QAAM,EAACC,kBAAmB,cAAcC,eAAiB,IAAIZ,YAAY,0BAAuBa,QAAQ,OAAOC,eAAe,IAC7P,0BAEJ,uBACA,iCACK,cAAC,SAAD,CAAQ5K,MAAM,oBAAoBC,KAAK,cAAcS,UAAU,wDAAwDG,QAxKpH,WACxB6E,QAAQS,IAAIe,EAAaE,EAAiBI,EAAmBE,EAAoBE,EAAoBE,GAElGN,EAC0B,KAAtBI,EAC0B,KAAtBF,EACuB,KAAnBN,EACsE,MAAlEA,EAAerB,MAAM,0CACF,KAAfmB,EACiC,IAA7BY,EAAkB7B,QACjBP,QAAQS,IAAI,eAAgB2B,GAC5BoB,EAAoB,gBAGpB2D,GAAU,GAAIzF,GACd1B,QAAQS,IAAI,eAAiB2B,KAIjCoB,EAAoB,cACpBxD,QAAQS,IAAI,eAAiBe,IAKjCiC,IAKc,KAAfjC,EACiC,IAA7BY,EAAkB7B,QACjBP,QAAQS,IAAI,eAAgB2B,GAC5BoB,EAAoB,gBAGpB2D,GAAU,2BAhGjB,sGAiGOnH,QAAQS,IAAI,eAAiB2B,KAIjCoB,EAAoB,cACpBxD,QAAQS,IAAI,eAAiBe,KAKrCgC,EAAoB,WACpBxD,QAAQS,IAAI,YAAcuB,KAI9BwB,EAAoB,oBACpBxD,QAAQS,IAAI,qBAAuByB,KAIvCsB,EAAoB,iBACpBxD,QAAQS,IAAI,kBAAoBqB,OA+Gf,cAAC,SAAD,CAAQxH,MAAM,kBAAeC,KAAK,eAAeS,UAAU,oCAAoCG,QAASgG,cCvJtHkG,EAtGG,WACd,IAAM7N,EAAUC,cAEhB,EAAgCK,mBAAS,MAAzC,mBAAO0B,EAAP,KACA,GADA,KACkC1B,mBAAS,OAA3C,mBAAOgG,EAAP,KAAkBC,EAAlB,KACA,EAA4BjG,mBAAS,KAArC,mBAAOuD,EAAP,KAAe3B,EAAf,KACA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAKMqF,EAAoBtH,uBAAY,kBAAMH,EAAQK,KAAK,YAAW,CAACL,IAChD,MAAjBU,OAAOC,QACP8G,IAGJpF,2BAAgB,WACZmE,QAAQC,QACRC,MACA,IAEHrE,2BAAgB,WACb,GAAIiE,EAAW,CACX,IAAIK,EAAgB,GACpBL,EAAU/D,SAAQ,SAAAC,GACd,IAAMoE,EAAWpE,EAAQiD,WAAWoB,MAAM,8CACtCC,GAAe,EAEF,MAAbR,GAAqBA,EAAUS,OAAS,GACxCT,EAAU/D,SAAQ,SAAAyE,GACVxE,EAAQW,KAAO6D,EAAS7D,KACxB2D,GAAe,MAI3BN,QAAQS,IAAIH,GACZH,EAActG,KAAK6G,EAAc1E,EAASsE,EAAcF,OAE5DxE,EAAeuE,QAGfH,QAAQS,IAAI,iBAIhB,CAACjF,EAAUsE,IAOf,IAAMI,EAAe,uCAAG,4BAAAtD,EAAA,6DACxBoD,QAAQS,IAAI,6CAA+CvG,OAAOyE,KAD1C,SAEH9B,IAAM,CAC3BC,OAAQ,OACRC,IAAK,uEACLK,KAAM,CACF,UAAalD,OAAOyE,OAErB3B,OAAM,SAAAC,GACL,MAAO,CAAEA,MAAOA,MATI,OAYF,OAVhB0D,EAFkB,QAYbtD,QACP0C,EAAaY,EAAOvD,MACpB1B,EAAU,OAGVsE,QAAQS,IAAI,iBACZV,EAAa,KAlBO,2CAAH,qDAsBfW,EAAgB,SAACG,EAAQP,EAAcF,GAKzC,OAHI,cAAC,EAAD,CAAYpF,UAAU,oBAAoB2B,GAAIkE,EAAOlE,GAAoB4B,MAAO+B,EAAcnB,IAAK0B,EAAOrE,SAAUyC,WAAYmB,EAAU3D,MAAO,CAAEkB,MAAO,QAAUvB,KAAMyE,EAAOzE,KAAMsD,KAAMmB,EAAOvE,qBAAuB,YAA7JuE,EAAOlE,KAO7E,OAAe,MAAXU,EAEI,cAAC,IAAMnB,SAAP,UACI,qBAAKlB,UAAU,sBAAf,SACKW,MAQT,cAAC,IAAMO,SAAP,UACI,2DCGD4E,EApGM,SAACvH,GAElBU,qBAAU,WACNiH,OAGJ,IAAME,EAAW7H,EAAM8H,SAAShB,MAAMiB,OAAOD,SAC7C,EAA4BvH,mBAAS,IAArC,mBAAO+G,EAAP,KAAeU,EAAf,KACA,EAAwCzH,mBAAS,IAAjD,mBAAOwN,EAAP,KAAwBC,EAAxB,KAKMrG,EAAe,uCAAG,gCAAAtE,EAAA,sEACFC,IAAM,CACpBC,OAAQ,MACRC,IAAK,mEAAqEqE,IACzEpE,OAAM,SAAAC,GACP,MAAO,CAAEA,MAAOA,MALA,OAQC,OAPfC,EADc,QAQVG,SACJkE,EAAUrE,EAAIE,MAERoK,EAAK,IAAIC,KAAKC,EAA0BxK,EAAIE,KAAKuK,YACjDC,EAAUJ,EAAGK,UAAY,KAAOC,EAA8BN,EAAGO,WAAW,GAAK,IAAMP,EAAGQ,cAEhGT,EAAaK,IAdC,2CAAH,qDAsBfF,EAA4B,SAACO,GAE/B,OADa,IAAIR,KAAKQ,GACVC,WAOVJ,EAAgC,SAACK,GACnC,OAAQA,GACJ,QACI,MAAO,GACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,GACD,MAAO,MACX,KAAK,GACD,MAAO,MACX,KAAK,GACD,MAAO,QAInB,OACI,cAAC,IAAMjM,SAAP,UACI,sBAAKlB,UAAY,oBAAjB,UACI,6BAAK6F,EAAOzE,OACZ,sBAAKpB,UAAY,iBAAjB,UACI,qBAAKN,IAAI,UAAUM,UAAU,8BAA8BL,IAAKkG,EAAOrE,WACvE,gCACK,cAAC,OAAD,CAAMlC,MAAOuG,EAAOvE,qBAAuB,QAAS/B,KAAK,cAAcS,UAAU,yCACjF,cAAC,OAAD,CAAMV,MAAOuG,EAAOyB,WAAY/H,KAAK,iBAAiBS,UAAU,yCAChE,cAAC,OAAD,CAAMV,MAAOgN,EAAiB/M,KAAK,kBAAkBS,UAAU,+CAGxE,gCACI,yCACA,+BAAO6F,EAAO0B,iBAElB,gCACI,6CACA,+BAAO1B,EAAO2B,uB,eChFlC4F,EAAWC,QAAS,EAsFLC,MApFf,WAEE,IAAMC,EAAS,WACb,OACA,eAAC,IAAMrM,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAGEsM,EAAgB,WACpB,OACE,eAAC,IAAMtM,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAGAuM,EAAU,WACd,OACE,eAAC,IAAMvM,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAGAwM,EAAY,WAChB,OACE,eAAC,IAAMxM,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAGAyM,EAAiB,WACrB,OACE,eAAC,IAAMzM,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAGA0M,EAAe,WACnB,OACA,eAAC,IAAM1M,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAGF,OACE,cAAC,IAAD,CAAQ2M,SAAS,UAAjB,SACE,qBAAK7N,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpB,KAAK,QAAZ,SACE,cAAC4O,EAAD,MAEF,cAAC,IAAD,CAAO5O,KAAK,yBAAyBkP,OAAQ,SAACvP,GAAD,OAC3C,eAAC,IAAM2C,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAcmF,SAAU9H,UAG5B,cAAC,IAAD,CAAOK,KAAK,oBAAoBkP,OAAQ,SAACvP,GAAD,OACtC,eAAC,IAAM2C,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQmF,SAAU9H,UAGtB,cAAC,IAAD,CAAOK,KAAK,SAAZ,SACE,cAAC6O,EAAD,MAEF,cAAC,IAAD,CAAO7O,KAAK,WAAZ,SACE,cAAC8O,EAAD,MAEF,cAAC,IAAD,CAAO9O,KAAK,UAAZ,SACE,cAAC+O,EAAD,MAEF,cAAC,IAAD,CAAO/O,KAAK,aAAZ,SACE,cAACgP,EAAD,MAEF,cAAC,IAAD,CAAOhP,KAAK,IAAZ,SACE,cAAC2O,EAAD,cCxFCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.cf79715e.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { Button } from 'primereact/button';\nimport { Link } from 'react-router-dom'\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport { useHistory } from 'react-router-dom';\nimport { Menubar } from \"primereact/menubar\";\n\n/**\n* Header component.\n*\n* @component\n*/\nconst Header = (props) => {\n\n    const history = useHistory();\n\n    const navigateToPage = useCallback((path) => history.push(path), [history]);\n\n    const [windowEmailActive, setWindowEmailActive] = useState(false);\n    useEffect(() => {\n            window.$email != null && setWindowEmailActive(true);\n        }, []);\n\n    // eslint-disable-next-line no-unused-vars\n    const [count, setCount] = useState(0);\n\n    const authBtn = (windowEmailActive) =>\n    windowEmailActive !== false ? (\n        <Button\n        label=\"Logout\"\n        icon=\"pi pi-fw pi-sign-out\"\n        className=\"p-shadow-1\"\n        onClick={() => {\n                            setCount(count => count + 1);\n                            window.$email = null;\n                            setWindowEmailActive(false)\n                        }\n                }\n        />\n    ) : (\n        <Link to=\"/login\">\n            <Button label=\"Login\" icon=\"pi pi-fw pi-sign-in\" className=\"p-shadow-1\"/>\n        </Link>\n    );\n\n    const items = [\n        {\n            label: 'Home',\n            icon: 'pi pi-fw pi-file',\n            command:()=>{ navigateToPage(\"/\")}\n        },\n        { \n            label: 'Rezepte',\n            icon: 'pi pi-fw pi-book',\n            command:()=>{ navigateToPage(\"/menu\")}\n        },\n        {\n            label: 'Erstellen',\n            icon: 'pi pi-fw pi-pencil',\n            command:()=>{ navigateToPage(\"/create\")}\n        },\n        {\n            label: 'Profil',\n            icon: 'pi pi-fw pi-user',\n            command:()=>{ navigateToPage(\"/profile\")}\n        },\n        {\n            label: 'Favoriten',\n            icon: 'pi pi-fw pi-calendar',\n            command:()=>{ navigateToPage(\"/favorites\")}\n        }\n    ];\n\n    const start = <img alt=\"logo\" src=\"showcase/images/logo.png\" onError={(e) => e.target.src='https://i.ibb.co/d6P2dT2/rataicon.png'} height=\"40\" className=\"p-mr-2\"></img>;\n\n    return (\n        <div className=\"appHeader\">\n            <div className=\"card\">\n                <Menubar model={items} start={start} end={\n                <div>\n                    {authBtn(windowEmailActive)}\n                </div>} />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/Lets_get_.09e664e3.png\";","export default __webpack_public_path__ + \"static/media/Cooking.1f16cdcd.png\";","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Carousel } from 'primereact/carousel';\nimport LetsGet from '../images/Lets_get_.png';\nimport Cooking from '../images/Cooking.png';\nimport axios from \"axios\";\nimport { Card } from 'primereact/card';\n\n/**\n* Home component.\n*\n* @component\n*/\nconst Home = () => {\n    const [products, setProducts] = useState(null);\n    // eslint-disable-next-line no-unused-vars\n    const [status, setStatus] = useState(404);\n    const [recipecards, setRecipeCards] = useState([]);\n\n    useLayoutEffect(() => {\n        fetchProducts();\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     }, []);\n\n    useEffect(() => {\n        if (products) {\n            products.forEach(product => {\n                let allRecipes = recipecards;\n                allRecipes.push (\n                    <React.Fragment key={product.id}>\n                        <Card className=\"Card\" title={product.name} footer={product.averagetimeinminutes + \" Minuten\"} header={<img alt=\"Product\" src={product.imageurl}></img>} style={{border:'1px solid var(--surface-d)'}}/>\n                    </React.Fragment>\n                );\n                setRecipeCards(allRecipes);\n            })\n        }\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     }, [products]);\n\n    /**\n    * Fetches all recipes from the API\n    */\n    const fetchProducts = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes\",\n        }).catch(error => {\n            return { error: error };\n        });\n        setProducts(sortArrayRandom(res.data));\n        if (res.status === 200) {\n            setStatus(200);\n        }\n    };\n  \n    const itemTemplate = (recipes) => {\n      return recipes;\n    }\n\n    /**\n    * Sorts array of recipes by random\n    */\n    const sortArrayRandom = (array) => {\n        let sortedArray = array.sort(() => Math.random() - 0.5);\n        return sortedArray;\n    }\n\n    const responsiveOptions = [\n        {\n            breakpoint: '1200px',\n            numVisible: 3,\n            numScroll: 2\n        },\n        {\n            breakpoint: '1020px',\n            numVisible: 2,\n            numScroll: 2\n        },\n        {\n            breakpoint: '550px',\n            numVisible: 1,\n            numScroll: 1\n        }\n    ];\n\n    return (\n        <div className=\"home p-mt-6\">\n            <div className=\"row p-grid p-m-3\">\n                <div className=\"p-col\">\n                    <img className=\"Images p-mr-5\" alt=\"Let's\" src={LetsGet} width=\"450px\"></img> \n                    <img alt=\"logo\" src=\"showcase/images/logo.png\" onError={(e) => e.target.src='https://i.ibb.co/d6P2dT2/rataicon.png'}\n                    className=\"logo p-mr-2\" width=\"180px\">\n                    </img>\n                    <img className=\"Images p-ml-5\" alt=\"Cooking\" src={Cooking} width=\"450px\"></img>\n                </div>\n            </div>\n            <div className=\"card p-mt-6\">\n                <Carousel className=\"carousel \" value={recipecards} itemTemplate={itemTemplate} numVisible={4} numScroll={2} responsiveOptions={responsiveOptions}circular\n                            autoplayInterval={5000}\n                />\n            </div>\n         </div>\n    );\n}\nexport default Home;\n","import React, { useState, useCallback } from \"react\";\nimport { Card } from 'primereact/card';\nimport axios from \"axios\";\nimport { Button } from 'primereact/button';\nimport { Chip } from 'primereact/chip';\nimport { useHistory } from 'react-router-dom';\nimport { confirmDialog } from 'primereact/confirmdialog';\n\n/**\n* Card component.\n*\n* @component\n*/\nconst RecipeCard = (props) => {\n    const [showlike, setShowLike] = useState(props.liked);\n    const history = useHistory();\n    const toggleLike = async () => {\n        if (window.$id) {\n            const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/like\",\n            data: {\n                \"accountId\": window.$id,\n                \"recipeId\": props.id\n            }\n            }).catch(error => {\n                return { error: error };\n            });\n\n            \n            if (res.status === 200) {\n                if (showlike === false) {\n                    setShowLike(true);\n                }\n                else {\n                    setShowLike(false);\n                }\n            }\n        }\n    }\n\n    const pushToRecipeDetailPage = useCallback(() => history.push('/recipe/edit/'+ props.id), [history, props.id]);\n    const pushToRecipePage = useCallback(() => history.push('/recipe/'+ props.id), [history, props.id]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const pushToProfilpage = useCallback(() => history.push('/'));\n    const deleteRecipe= async () => {\n        if (window.$id) {\n            // eslint-disable-next-line no-unused-vars\n            const res = await axios({\n            method: \"delete\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/mycreated/delete/\"+ props.id,\n            data: {\n                \"accountId\": window.$id \n            }\n            }).catch(error => {\n                return { error: error };\n            });\n            pushToProfilpage();\n        }}\n\n    const confirm1 = () => {\n        confirmDialog({\n            message: 'Wollen Sie das Rezept wirklich löschen?',\n            header: 'Löschen',\n            icon: 'pi pi-exclamation-triangle',\n            acceptLabel: \"Ja\",\n            rejectLabel: \"Nein\",\n            accept: () => deleteRecipe()\n        });\n    };\n\n    let chips = [];\n    props.categories.forEach((category) => {\n        chips.push(\n            <Chip label={category} className=\"p-shadow-1 p-mr-2 p-mb-2 custom-chip\" />\n        )\n    })\n\n    const header = (\n        <img alt=\"Card\" className=\"recipeCardImg\" src=\"showcase/demo/images/usercard.png\" onError={(e) => e.target.src=props.img} />\n    );\n    \n    let footer;\n    if (window.$id) {\n        if (showlike === true) {\n        footer = (\n            <span>\n                <Button className=\"p-shadow-1 likebtn\" label=\"\" icon=\"pi pi-window-maximize\" onClick={pushToRecipePage} />\n                <Button className=\"p-shadow-1 likebtn p-ml-2\" label=\"Gemerkt\" icon=\"pi pi-star\" onClick={toggleLike} />\n            </span>\n        );\n        }\n        else if (showlike === false) {\n            footer = (\n                <span>\n                    <Button className=\"p-shadow-1 likebtn\" label=\"\" icon=\"pi pi-window-maximize\" onClick={pushToRecipePage} />\n                    <Button className=\"p-shadow-1 likebtn p-ml-2\" label=\"Merken\" icon=\"pi pi-star-o\" onClick={toggleLike} />\n                </span>\n            );\n        }\n        else if (showlike === \"editable\") {\n            footer = (\n                <span >\n                     <Button className=\"p-shadow-1 likebtn p-mb-2 p-lg-3 p-mr-2\" label=\"\" icon=\"pi pi-window-maximize\" onClick={pushToRecipePage} />\n                     <Button className=\"p-shadow-1 likebtn p-mb-2 p-lg-3 p-mr-2\" label=\"\" icon=\"pi pi-pencil\" onClick={pushToRecipeDetailPage} />\n                     <Button className=\"p-shadow-1 likebtn p-button-danger p-mb-2  \" label=\"\" icon=\"pi pi-trash\" onClick={confirm1} />\n                </span>\n            )\n        }\n    }\n    else {\n        footer = (\n            <span>\n                <Button className=\"p-shadow-1 likebtn \" label=\"\" icon=\"pi pi-window-maximize\" onClick={pushToRecipePage} />\n                \n            </span>\n        );\n    }\n    \n    \n    return(\n        <div className=\"fullCard p-d-block p-mx-auto\" >\n            <Card className=\"cardContent\" title={props.name} subTitle={props.time} style={{ \"box-shadow\": \"0 4px 7px 0 rgba(0, 0, 0, 0.15) , 0 6px 10px 0 rgba(0, 0, 0, 0.19)\" }} footer={footer} header={header}>\n                <p className=\"p-m-0\" style={{lineHeight: '1.5'}}>{props.description}</p>\n                <div className=\"chip-holder\">\n                    {chips}\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default RecipeCard;\n","import RecipeCard from './recipeCard';\nimport React, { useLayoutEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n/**\n* Component see all recipes.\n*\n* @component\n*/\nconst RecipesMenu = () => {\n    const [products, setProducts] = useState(null);\n    const [favorites, setFavorites] = useState(null);\n    const [status, setStatus] = useState(404);\n    const [recipecards, setRecipeCards] = useState([]);\n\n    useLayoutEffect(() => {\n        console.clear();\n        fetchAllRecipes();\n     }, []);\n\n     useLayoutEffect(() => {\n        if (products) {\n            let tempcardarray = [];\n            products.forEach(product => {\n                const catarray = product.categories.match(/[A-Za-z0-9_äÄöÖüÜß]+/g);\n                let alreadyliked = false;\n\n                if (favorites != null && favorites.length > 0) {\n                    favorites.forEach(favorite => {\n                        if (product.id === favorite.id) {\n                            alreadyliked = true;\n                        }\n                    })\n                }\n                console.log(alreadyliked);\n                tempcardarray.push(genRecipeCard(product, alreadyliked, catarray));\n            })\n            setRecipeCards(tempcardarray);\n        }\n        else {\n            console.log(\"No products\");\n        }\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     }, [products, favorites]);\n\n    /**\n    * Fetches all recipes from the API\n    */\n    const fetchAllRecipes = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes\",\n            data: {\n                \"accountId\": window.$id\n            }\n        }).catch(error => {\n            return { error: error };\n        });\n\n\n        if (window.$id) {\n            console.log(\"Fetching favorite recipes with accountId: \" + window.$id);\n            const favres = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/myfavorites\",\n            data: {\n                \"accountId\": window.$id\n            }\n            }).catch(error => {\n                return { error: error };\n            });\n\n            \n            if (favres.status === 200) {\n                setFavorites(favres.data);\n            }\n            else {\n                setFavorites([]);\n            }\n        }\n\n        setProducts(res.data.reverse());\n        if (res.status === 200) {\n            setStatus(200);\n        }\n    };\n\n    /**\n    * Generates a recipe card for each recipe\n    */\n    const genRecipeCard = (recipe, alreadyliked, catarray) => {\n        const card = (\n            <RecipeCard className=\"p-mb-2 p-shadow-2\" id={recipe.id} key={recipe.id} liked={alreadyliked} img={recipe.imageurl} categories={catarray} style={{ width: '25em' }} name={recipe.name} time={recipe.averagetimeinminutes + \" Minuten\"} />\n        );\n\n        return card; \n    }\n\n    //Conditional Rendering\n    if (status === 200) {\n        return (\n            <React.Fragment>\n                <div className=\"cards p-mt-4 p-mb-4\">\n                    {recipecards}\n                </div>\n                \n            </React.Fragment>\n        );\n    }\n    else {\n        return (\n            <React.Fragment>\n                <p>Rezepte werden geladen.</p>\n            </React.Fragment>\n        );\n    }\n}\n//{recipecards}\nexport default RecipesMenu;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport { Slider } from 'primereact/slider';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\n\n/**\n* Component to see and edit details of recipe.\n*\n* @component\n*/\nconst RecipeDetail = (props) => {\n    const history = useHistory();\n    const toast = useRef(null);\n\n    /**\n    * Restricts access to the page if the user is not logged in\n    */\n    const handleNotLoggedIn = useCallback(() => history.push('/login'), [history]);\n    if (window.$email == null) {\n        handleNotLoggedIn();\n    }\n\n    useEffect(() => {\n        fetchRecipeInfo();  \n        changeInputToDefault();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    const defaultImage = \"http://myminidoxie.com/wp-content/uploads/2012/11/which-came-first-the-wiener-or-the-dachshund.jpg\"\n    const recipeID = props.recipeId.match.params.recipeId;\n    const [recipe, setRecipe] = useState(\"\");\n    const [recipeName, setRecipeName] = useState(\"\");\n    const [recipeImageUrl, setRecipeImageUrl] = useState(\"\");\n    const [recipeavgtime, setRecipeAvgTime] = useState('30');\n    const [recipedifficulty, setRecipeDifficulty] = useState();\n    const [recipeingredients, setRecipeIngredients] = useState(\"\");\n    const [recipeinstruction, setRecipeInstruction] = useState(\"\");\n    const [selectedcategorys, setSelectedCategorys] = useState([]);\n\n    const difficultys = [\n        {name: 'einfach'},\n        {name: 'normal'},\n        {name: 'schwer'}\n    ];\n\n    const categorys = [\n        { name: 'Hauptspeise'},\n        { name: 'Gemüse'},\n        { name: 'Vegetarisch'},\n        { name: 'Auflauf'},\n        { name: 'Nudeln'},\n        { name: 'Suppe'},\n        { name: 'Salat'},\n        { name: 'Backen'},\n        { name: 'Torte'},\n        { name: 'Vegan'},\n        { name: 'Dessert'},\n        { name: 'Beilage'},\n        { name: 'Fisch'},\n        { name: 'Obst'},\n        { name: 'Eis'},\n        { name: 'Kuchen'},\n        { name: 'Pizza'},\n        { name: 'Frühstück'},\n        { name: 'Brot'},\n        { name: 'Fleisch'},\n        { name: 'Käse'},\n        { name: 'Warm'},\n        { name: 'Kalt'},\n        { name: 'Vorspeise'},\n        { name: 'Süßspeise'},\n        { name: 'Vollkorn'},\n        { name: 'Plätzchen'},\n        { name: 'Schmoren'},\n        { name: 'Snack'}\n    ];\n\n   const changeInputToDefault = () =>{\n       setRecipeName(recipe.name);\n       setRecipeImageUrl(recipe.imageurl);\n       setRecipeAvgTime(recipe.averagetimeinminutes);\n       setRecipeDifficulty({name:recipe.difficulty}); \n       setRecipeIngredients(recipe.ingredients); \n       setRecipeInstruction(recipe.preparation);\n       \n   };\n   \n    const handleStoreAndCancel = useCallback(() => history.push('/#profile'), [history]);\n\n    /**\n    * Fetches info for the recipe from the backend\n    */\n    const fetchRecipeInfo = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/recipe/\" + recipeID,\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n              setRecipe(res.data);\n              console.log(res.data);\n              setRecipeName(res.data.name);\n              setRecipeImageUrl(res.data.imageurl);\n              setRecipeAvgTime(res.data.averagetimeinminutes);\n              setRecipeDifficulty({name:res.data.difficulty}); \n              setRecipeIngredients(res.data.ingredients); \n              setRecipeInstruction(res.data.preparation);\n                     \n          }\n    }\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    };\n        \n       const checkIfInputIsValid = () =>{\n            console.log(recipeName , recipeImageUrl , recipedifficulty , recipeingredients , recipeinstruction , selectedcategorys)\n    \n            if(recipedifficulty){\n                if(recipeinstruction !== \"\"){\n                    if(recipeingredients !== \"\"){\n                        if(recipeImageUrl !== \"\"){\n                            if(recipeImageUrl.match(/(https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|))/) != null){\n                                if(recipeName !== \"\"){\n                                    if(selectedcategorys.length === 0){\n                                        console.log(\"arrrrraaaay:\"+ selectedcategorys)\n                                        showInputValidError(\"Kategorien\");\n                                       }   \n                                    else{\n                                        updateRecipe(\"\", recipeImageUrl);\n                                        console.log(\"Kategorien: \" + selectedcategorys)\n                                       }\n                                }   \n                                else{\n                                    showInputValidError(\"Rezeptname\");\n                                    console.log(\"Rezeptname: \" + recipeName)\n                                }\n                            }\n                            else\n                            {\n                                showAddRecipeImageUrlError();\n                            }\n                            \n                        }\n                        else{\n                            //showInputValidError(\"Bild Url\");\n                            //console.log(\"Bild Url: \" + recipeImageUrl)\n                            if(recipeName !== \"\"){\n                                if(selectedcategorys.length === 0){\n                                    console.log(\"arrrrraaaay:\"+ selectedcategorys)\n                                    showInputValidError(\"Kategorien\");\n                                   }   \n                                else{\n                                    updateRecipe(\"mit Platzhalter als Bild\", defaultImage);\n                                    console.log(\"Kategorien: \" + selectedcategorys)\n                                   }\n                            }   \n                            else{\n                                showInputValidError(\"Rezeptname\");\n                                console.log(\"Rezeptname: \" + recipeName)\n                            }\n                        }\n                    }\n                    else{\n                        showInputValidError(\"Zutaten\");\n                        console.log(\"Zutaten: \" + recipeingredients)\n                    }\n                }\n                else{\n                    showInputValidError(\"Arbeitsanweisung\");\n                    console.log(\"Arbeitsanweisung: \" + recipeinstruction)\n                }\n            }\n            else{\n                showInputValidError(\"Schwierigkeit\");\n                console.log(\"Schwierigkeit: \" + recipedifficulty)\n            }\n        };  \n       const showAddRecipeSuccess = (entry) => {\n            toast.current.clear();\n            toast.current.show({severity:'success', summary: 'Rezept wurde gespeichert!', detail:(entry), life: 1500, closable: false});\n        };\n        \n    \n        const showAddRecipeError = () => {\n            toast.current.clear();\n            toast.current.show({severity:'error', summary: 'Speichern fehlgeschlagen!', detail:'Bitte versuchen Sie es erneut.', life: 3000, closable: false});\n        };\n    \n        const showInputValidError = (entry) => {\n            toast.current.clear();\n            toast.current.show({severity:'error', summary: (\"Es fehlt \"+ entry + \"!\"), detail:'Bitte alle Felder füllen.', life: 3000, closable: false});\n        };\n    \n        const showAddRecipeImageUrlError = () => {\n            toast.current.clear();\n            toast.current.show({severity:'error', summary: 'Bild Url ist ungültig!', detail:'Die Url sollte mit \"https://\" beginnen und mit \".jpg, .png, .jpeg, .gif\" enden.', life: 5000, closable: false});\n        };\n    \n        const clearToast = () => {\n            toast.current.clear();\n        }\n    \n    /**\n    * Sends the updated recipe to the server\n    */\n    const updateRecipe = async (entry, entry1) => {\n        console.log(\"Sending recipe to backend\");\n        let catarray = [];\n        console.log(window.$id);\n        selectedcategorys.forEach(cat => {\n            catarray.push(cat.name);\n        })\n         const res = await axios({\n             method: \"put\",\n             url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/mycreated/edit/\" + recipeID,\n             data: {\n                 \"name\": recipeName,\n                 \"imageurl\": entry1,\n                 \"averagetimeinminutes\": recipeavgtime,\n                 \"difficulty\": recipedifficulty.name,\n                 \"ingredients\": recipeingredients,\n                 \"preparation\": recipeinstruction,\n                 \"categories\": JSON.stringify(catarray),\n                 \"accountId\": window.$id\n             }\n           }).catch(error => {\n             return { error: error };\n           });\n \n           if (res.status === 200) {\n                 changeInputToDefault();\n                 showAddRecipeSuccess(entry);\n                 sleep(1500).then(r => {\n                     handleStoreAndCancel();\n                 });\n           }\n           else {\n                 showAddRecipeError();\n           }\n     }\n    \n   return (\n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast}  className=\"ToastMsg\" />\n            <div className=\"recipeDetail p-mb-4 p-mx-auto\">\n                        <h1 >Rezept bearbeiten</h1>\n                        <span className=\"recipename\">\n                            <h5 htmlFor=\"recipename\">Rezeptname: </h5>\n                            <InputText className=\"recipeDetailInputText\" id=\"recipename\" value={recipeName} onChange={(e) => setRecipeName(e.target.value)} placeholder =\"... Bauernsalat\" /> \n                            <br/>\n                        </span>\n                        <br/>  \n                        <span className=\"recipeimageurl\">\n                            <h5 htmlFor=\"recipeimageurl\">Bild Url: </h5>\n                            <InputText className=\"recipeDetailInputText\" id=\"recipeimageurl\" value={recipeImageUrl} onChange={(e) => setRecipeImageUrl(e.target.value)} placeholder =\"... http://link-zum-bild\"/> \n                            <br/>\n                        </span>\n                        <br/>  \n                        <div className=\"\">\n                            <h5>Arbeitszeit: {recipeavgtime} Min.</h5>\n                            <InputNumber className=\"recipedetailavgtimecontent\" value={recipeavgtime} mode=\"decimal\" onValueChange={(e) => setRecipeAvgTime(e.target.value)} />\n                            <Slider className=\"recipedetailavgtimecontent p-mx-auto\" value={recipeavgtime} onChange={(e) => setRecipeAvgTime(e.value)}  min={0} max={555}/>\n                            \n                        </div>\n                        <div className=\"\">\n                            <h5>Schwierigkeit</h5>\n                            <SelectButton value={recipedifficulty} options={difficultys} onChange={(e) => setRecipeDifficulty(e.value)} optionLabel=\"name\"/>\n                            \n                        </div>\n                        <div className=\"\">\n                            <h5>Zutaten: </h5>\n                            <InputTextarea  className=\"recipeDetailInputText\" value={recipeingredients} onChange={(e) => setRecipeIngredients(e.target.value)} placeholder=\"... Eier 3Stk, Milch 300ml, ...\" rows={5} cols={30} autoResize />\n                \n                        </div>\n                        <div className=\"\">\n                            <h5>Arbeitsanweisung: </h5>\n                            <InputTextarea className=\"recipeDetailInputText\" value={recipeinstruction} onChange={(e) => setRecipeInstruction(e.target.value)} placeholder=\"... erst Mixen, dann Backen\" rows={5} cols={30} autoResize />\n            \n                        </div>\n                        <div className=\"\">\n                            <h5>Kategorien</h5>\n                            <MultiSelect value={selectedcategorys} options={categorys} onChange={(e) => setSelectedCategorys(e.value)} optionLabel=\"name\" filter filterPlaceholder= \"z.B: Backen\" selectionLimit = \"4\" placeholder=\"Wähle eine Kategorie\" display=\"chip\" showSelectAll={false} />\n                            <br/>\n                        </div>\n                        <br/>\n                        <span>\n                             <Button label=\"Speichern\" icon=\"pi pi-check\" className=\"p-shadow-2 p-button-success p-buttonset p-m-2\" onClick = {checkIfInputIsValid} />\n                             <Button label=\"Zurücksetzen\" icon=\"pi pi-replay\" className=\"p-shadow-2 p-button-warning p-m-2\" onClick={changeInputToDefault}/>\n                             <Button label=\"Abbrechen\" icon=\"pi pi-times\" className=\"p-shadow-2 p-button-danger p-m-2\" onClick={handleStoreAndCancel}/>\n                        </span>\n            </div>\n        </React.Fragment>\n    );\n}\nexport default RecipeDetail;\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport axios from \"axios\";\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { useHistory } from 'react-router-dom';\n\n/**\n* Component to authenticate the user with email and password.\n*\n* @component\n*/\nconst Login = (props) => {\n    const history = useHistory();\n\n    const toast = useRef(null);\n    const [Email, setEmail] = useState(\"\");\n    const [Pass, setPassword] = useState(\"\");\n\n    const handleOnLoginSuccess = useCallback(() => history.push('/'), [history]);\n\n    const showLoginSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Login erfolgreich', detail:\"Sie werden nun weitergeleitet\", life: 2000, closable: false});\n    }\n\n    const showRegistrationSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Registrierung erfolgreich', detail:\"Sie können sich nun anmelden\", life: 2000, closable: false});\n    }\n\n    const showLoginError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Login fehlgeschlagen', detail:'Bitte Eingaben überprüfen', life: 3000, closable: false});\n    }\n\n    const showRegistrationError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Registrierung fehlgeschlagen', detail:'Email Adresse wird bereits verwendet', life: 3000, closable: false});\n    }\n\n    const showNoValidCredentialsError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Registrierung fehlgeschlagen', detail: 'Bitte eine gültige Daten angeben', life: 3000, closable: false});\n    }\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    const clearToast = () => {\n        toast.current.clear();\n    }\n\n    /**\n    * Cheks whether an email is valid\n    * @param {*} email \n    * @returns true or false depending on whether it is a valid email\n    */\n    const validateEmail = (email) => {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n    /**\n    * Request cat pic from thatcopy.pw/catapi\n    * @returns Cat pic webp url\n    */\n    const requestCatPic = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://thatcopy.pw/catapi/rest/\"\n          }).catch(error => {\n            return { error: error };\n          });\n\n          return res.data.webpurl;\n    }\n\n    /**\n    * Sends Email and password to api and checks response\n    */\n    const login = async () => {\n        if (Pass !== \"\") {\n            const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/login\",\n            data: {\n                \"email\": Email,\n                \"password\": Pass\n            }\n          }).catch(error => {\n            return { error: error };\n          });\n\n          console.log(res.data);\n\n          if (res.status === 200) {\n              window.$email = Email.toLowerCase();\n              window.$id = res.data.accountId;\n              showLoginSuccess();\n                sleep(2000).then(r => {\n                    handleOnLoginSuccess();\n                });\n          }\n          else {\n            showLoginError();\n          }\n        }\n        else {\n            showNoValidCredentialsError();\n        }\n    }\n\n    /**\n    * Sends a new email and password to the backend to register a new user\n    */\n    const register = async () => {\n        const mail = Email.toLocaleLowerCase();\n        if (validateEmail(mail) && Pass !== \"\") {\n            const picurl = await requestCatPic();\n            const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/register\",\n            data: {\n                \"email\": mail,\n                \"password\": Pass,\n                \"pictureurl\": picurl\n            }\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n              console.log(res.data);\n              window.$email = res.data.email;\n              window.$id = res.data.id;\n              showRegistrationSuccess();\n          }\n          else {\n              showRegistrationError();\n          }\n        }\n        else {\n            showNoValidCredentialsError();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast} className=\"ToastMsg\" />\n                <div className=\"p-d-block p-mx-auto p-mt-6 loginform\">\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\">\n                                <i className=\"pi pi-user\"></i>\n                            </span>\n                            <InputText placeholder=\"Email Adresse\" id=\"email\" name=\"Email\" onChange={e => setEmail(e.target.value)} type=\"text\"/>\n                        </div>\n                        <div className=\"p-inputgroup p-mt-1\">\n                            <span className=\"p-inputgroup-addon\">\n                                <i className=\"pi pi-key\"></i>\n                            </span>\n                            <Password toggleMask placeholder=\"Password \"id=\"password\" name=\"Password\" onChange={e => setPassword(e.target.value)} type=\"text\" feedback={false}/>\n                        </div>\n                        <div className=\"p-mt-2 buttons\">\n                            <Button onClick={login} label=\"Anmelden\" className=\"p-button-primary p-mr-2 p-shadow-1\" />\n                            <Button onClick={register} label=\"Registrieren\" className=\"p-button-primary p-shadow-1\" />\n                        </div>\n                </div>\n        </React.Fragment>\n    );\n};\n\nexport default Login;\n","import RecipeCard from './recipeCard';\nimport React, { useLayoutEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n/**\n* Component to see own recipes.\n*\n* @component\n*/\nconst MyRecipes = () => {\n    const [products, setProducts] = useState(null);\n    const [status, setStatus] = useState(404);\n    const [recipecards, setRecipeCards] = useState([]);\n\n    useLayoutEffect(() => {\n        fetchProducts();\n     }, []);\n\n     useLayoutEffect(() => {\n        if (products) {\n            let tempcardarray = [];\n            products.forEach(product => {\n                const catarray = product.categories.match(/[A-Za-z0-9_äÄöÖüÜß]+/g);\n\n                tempcardarray.push(genRecipeCard(product, catarray));\n            })\n            setRecipeCards(tempcardarray);\n        }\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     }, [products]);\n\n    /**\n    * Fetches all recipes from the API\n    */\n    const fetchProducts = async () => {\n        const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/mycreated\",\n            data: {\n                \"accountId\": window.$id,\n            }\n        }).catch(error => {\n            return { error: error };\n        });\n\n        setProducts(res.data);\n        if (res.status === 200) {\n            setStatus(200);\n        }\n    };\n\n    /**\n    * Generates a recipe card for each recipe\n    */\n    const genRecipeCard = (recipe, catarray) => {\n        const card = (\n            <React.Fragment key={recipe.id}>\n                <RecipeCard liked=\"editable\" className=\"p-mb-2 p-shadow-2\" id={recipe.id} key={recipe.id} editable={true} img={recipe.imageurl} categories={catarray} style={{ width: '25em' }} name={recipe.name} time={recipe.averagetimeinminutes + \" Minuten\"} />\n            </React.Fragment>\n        );\n\n        return card; \n    }\n\n    //Conditional Rendering\n    if (status === 200) {\n        return (\n            <React.Fragment>\n                <div className=\"cards p-mt-4 p-mb-4\">\n                    {recipecards}\n                </div>\n                \n            </React.Fragment>\n        );\n    }\n    else {\n        return (\n            <React.Fragment>\n                <p>Rezepte werden geladen.</p>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyRecipes;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport MyRecipes from './myRecipes.jsx';\n\n/**\n* Component for showing details of the user and allowing to change the account password.\n*\n* @component\n*/\nconst Profile = (props) => {\n    const history = useHistory();\n\n    const toast = useRef(null);\n\n    const [Email, setEmail] = useState(\"\");\n    const [Pass, setPassword] = useState(\"\");\n    const [Pic, setPic] = useState(\"\");\n\n    useEffect(() => {\n        fetchAccountInfo();\n    })\n\n    /**\n    * Restricts access to the page if the user is not logged in\n    */\n    const handleNotLoggedIn = useCallback(() => history.push('/login'), [history]);\n    if (window.$email == null) {\n        handleNotLoggedIn();\n    }\n\n    const showPwChangeSuccess = () => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Passwort erfolgreich geändert', life: 2000, closable: false});\n    }\n\n    const showPwChangeError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Passwort darf nicht leer sein', detail:'Bitte Eingaben überprüfen', life: 3000, closable: false});\n    }\n\n    const clearToast = () => {\n        toast.current.clear();\n    }\n    \n\n    /**\n    * Fetches the account information from the server and sets the state accordingly.\n    */\n    const fetchAccountInfo = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/\" + window.$id,\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n              setEmail(res.data.email);\n              setPic(res.data.pictureurl);\n          }\n    }\n\n    /**\n    * Sends new Password to backend\n    */\n    const submitPassword = async () => {\n        if (Pass !== \"\")\n        {\n            const res = await axios({\n                method: \"post\",\n                url: \"https://ratatouilleexpress.retch.duckdns.org/api/accountmgr/newpw\",\n                data: {\n                    \"accountId\": window.$id,\n                    \"password\": Pass\n                }\n              }).catch(error => {\n                return { error: error };\n              });\n    \n            if (res.status === 200)\n            {\n                showPwChangeSuccess();\n            }\n        }\n        else {\n            showPwChangeError();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast} />\n            <div className=\"p-grid p-fluid p-mt-4\">\n                    <div className=\"p-mx-auto\">\n                        <div className=\"p-col-12 profileInputGroup\">\n                            <img className=\"profilePic p-shadow-3 p-mb-3\" src={Pic} alt=\"Profile\" />\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-user\" ></i>\n                                </span>\n                                <InputText disabled placeholder=\"Email Adresse\" value={Email} onChange={e => setEmail(e.target.value)} />\n                            </div>\n                            <div className=\"p-inputgroup p-mt-1\">\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-key\" ></i>\n                                </span>\n                                <InputText placeholder=\"neues Passwort\" value={Pass} onChange={e => setPassword(e.target.value)} />\n                            </div>\n                            <div>\n                            <Button onClick={submitPassword} label=\"Speichern\" className=\"p-button-primary p-mt-1 pwSaveBtn p-shadow-1\" />\n                            </div>\n                        </div>\n                        </div>\n                    \n                </div>\n                <div className=\"p-mt-4 p-mx-auto MyRecipes\">\n                    <MyRecipes></MyRecipes>\n                </div>\n                \n        </React.Fragment>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useCallback, useRef} from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Slider } from 'primereact/slider';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport axios from \"axios\";\n\n/**\n* Component for creating a recipe.\n*\n* @component\n*/\nconst CreateRecipe = (props) => {\n    const history = useHistory();\n    const toast = useRef(null);\n    \n    /**\n    * Restricts access to the page if the user is not logged in\n    */\n    const handleNotLoggedIn = useCallback(() => history.push('/login'), [history]);\n    if (window.$email == null) {\n        handleNotLoggedIn();\n    };\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    };\n\n    const handleOnAddRecipeSuccess = useCallback(() => history.push('/'), [history]);\n    const defaultImage = \"http://myminidoxie.com/wp-content/uploads/2012/11/which-came-first-the-wiener-or-the-dachshund.jpg\"\n    const [recipeName, setRecipeName] = useState(\"\");\n    const [recipeImageUrl, setRecipeImageUrl] = useState(\"\");\n    const [recipeavgtime, setRecipeAvgTime] = useState('30');\n    const [recipedifficulty, setRecipeDifficulty] = useState();\n    const [recipeingredients, setRecipeIngredients] = useState(\"\");\n    const [recipeinstruction, setRecipeInstruction] = useState(\"\");\n    const [selectedcategorys, setSelectedCategorys] = useState([]);\n\n    const difficultys = [\n        {name: 'einfach'},\n        {name: 'normal'},\n        {name: 'schwer'}\n    ];\n\n    const categorys = [\n        { name: 'Hauptspeise'},\n        { name: 'Gemüse'},\n        { name: 'Vegetarisch'},\n        { name: 'Auflauf'},\n        { name: 'Nudeln'},\n        { name: 'Suppe'},\n        { name: 'Salat'},\n        { name: 'Backen'},\n        { name: 'Torte'},\n        { name: 'Vegan'},\n        { name: 'Dessert'},\n        { name: 'Beilage'},\n        { name: 'Fisch'},\n        { name: 'Obst'},\n        { name: 'Eis'},\n        { name: 'Kuchen'},\n        { name: 'Pizza'},\n        { name: 'Frühstück'},\n        { name: 'Brot'},\n        { name: 'Fleisch'},\n        { name: 'Käse'},\n        { name: 'Warm'},\n        { name: 'Kalt'},\n        { name: 'Vorspeise'},\n        { name: 'Süßspeise'},\n        { name: 'Vollkorn'},\n        { name: 'Plätzchen'},\n        { name: 'Schmoren'},\n        { name: 'Snack'}\n    ];\n\n   const changeInputToDefault = () =>{\n       setRecipeName(\"\");\n       setRecipeImageUrl(\"\");\n       setRecipeAvgTime(\"30\");\n       setRecipeDifficulty(); \n       setRecipeIngredients(\"\"); \n       setRecipeInstruction(\"\");\n       setSelectedCategorys([]);\n   };\n \n    /**\n    * Fetches all recipes from the API\n    */\n    const checkIfInputIsValid = () =>{\n        console.log(recipeName , recipeImageUrl , recipedifficulty , recipeingredients , recipeinstruction , selectedcategorys)\n\n        if(recipedifficulty){\n            if(recipeinstruction !== \"\"){\n                if(recipeingredients !== \"\"){\n                    if(recipeImageUrl !== \"\"){\n                        if(recipeImageUrl.match(/(https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|))/) != null){\n                            if(recipeName !== \"\"){\n                                if(selectedcategorys.length === 0){\n                                    console.log(\"arrrrraaaay:\"+ selectedcategorys)\n                                    showInputValidError(\"Kategorien\");\n                                   }   \n                                else{\n                                    addRecipe(\"\", recipeImageUrl);\n                                    console.log(\"Kategorien: \" + selectedcategorys)\n                                   }\n                            }   \n                            else{\n                                showInputValidError(\"Rezeptname\");\n                                console.log(\"Rezeptname: \" + recipeName)\n                            }\n                        }\n                        else\n                        {\n                            showAddRecipeImageUrlError();\n                        }\n                        \n                    }\n                    else{\n                        if(recipeName !== \"\"){\n                            if(selectedcategorys.length === 0){\n                                console.log(\"arrrrraaaay:\"+ selectedcategorys)\n                                showInputValidError(\"Kategorien\");\n                               }   \n                            else{\n                                addRecipe(\"mit Platzhalter als Bild\", defaultImage);\n                                console.log(\"Kategorien: \" + selectedcategorys)\n                               }\n                        }   \n                        else{\n                            showInputValidError(\"Rezeptname\");\n                            console.log(\"Rezeptname: \" + recipeName)\n                        }\n                    }\n                }\n                else{\n                    showInputValidError(\"Zutaten\");\n                    console.log(\"Zutaten: \" + recipeingredients)\n                }\n            }\n            else{\n                showInputValidError(\"Arbeitsanweisung\");\n                console.log(\"Arbeitsanweisung: \" + recipeinstruction)\n            }\n        }\n        else{\n            showInputValidError(\"Schwierigkeit\");\n            console.log(\"Schwierigkeit: \" + recipedifficulty)\n        }\n    };  \n    const showAddRecipeSuccess = (entry) => {\n        toast.current.clear();\n        toast.current.show({severity:'success', summary: 'Rezept wurde gespeichert!', detail:(entry), life: 1500, closable: false});\n    };\n    \n\n    const showAddRecipeError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Speichern fehlgeschlagen!', detail:'Bitte versuchen Sie es erneut.', life: 3000, closable: false});\n    };\n\n    const showInputValidError = (entry) => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: (\"Es fehlt \"+ entry + \"!\"), detail:'Bitte alle Felder füllen.', life: 3000, closable: false});\n    };\n\n    const showAddRecipeImageUrlError = () => {\n        toast.current.clear();\n        toast.current.show({severity:'error', summary: 'Bild Url ist ungültig!', detail:'Die Url sollte mit \"https://\" beginnen und mit \".jpg, .png, .jpeg, .gif\" enden.', life: 5000, closable: false});\n    };\n\n    const clearToast = () => {\n        toast.current.clear();\n    }\n\n    /**\n    * Sends recipe to the API\n    */\n    const addRecipe = async (entry,imageUrl) => {\n       console.log(\"Sending recipe to backend\");\n       let catarray = [];\n       console.log(window.$id);\n       selectedcategorys.forEach(cat => {\n           catarray.push(cat.name);\n       })\n        const res = await axios({\n            method: \"post\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/create\",\n            data: {\n                \"name\": recipeName,\n                \"imageurl\": imageUrl,\n                \"averagetimeinminutes\": recipeavgtime,\n                \"difficulty\": recipedifficulty.name,\n                \"ingredients\": recipeingredients,\n                \"preparation\": recipeinstruction,\n                \"categories\": JSON.stringify(catarray),\n                \"creatorId\": window.$id\n            }\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n                changeInputToDefault();\n                showAddRecipeSuccess(entry);\n                sleep(1500).then(r => {\n                    handleOnAddRecipeSuccess();\n                });\n          }\n          else {\n                showAddRecipeError();\n          }\n    }\n\n    return (\n        <React.Fragment>\n            <Toast ref={toast} onClick={clearToast} className=\"ToastMsg\" />\n            <div className=\"createrecipe p-mb-4 p-mx-auto\">\n                        <h1 >Rezept erstellen</h1>\n                        <span className=\"\">\n                            <h5 htmlFor=\"recipename\">Rezeptname: </h5>\n                            <InputText className=\"createRecipeInputText\" id=\"recipename\" value={recipeName} onChange={(e) => setRecipeName(e.target.value)} placeholder =\"Bauernsalat\" /> \n                        </span>\n                        <br/>  \n                        <span className=\"\">\n                            <h5 htmlFor=\"recipeimageurl\">Bild Url: </h5>\n                            <InputText className=\"createRecipeInputText\" id=\"recipeimageurl\" value={recipeImageUrl} onChange={(e) => setRecipeImageUrl(e.target.value)} placeholder =\"http://link-zum-bild\"/> \n                        </span>\n                        <br/>  \n                        <div className=\"\">\n                            <h5>Arbeitszeit: {recipeavgtime} Min.</h5>\n                            <InputNumber className=\"recipeavgtimecontent\" value={recipeavgtime} mode=\"decimal\" onValueChange={(e) => setRecipeAvgTime(e.target.value)} />\n                            <Slider className=\"recipeavgtimecontent p-mx-auto\" value={recipeavgtime} onChange={(e) => setRecipeAvgTime(e.value)}  min={0} max={555}/>\n                            \n                        </div>\n                        <div className=\"recipedifficulty\">\n                            <h5>Schwierigkeit</h5>\n                            <SelectButton value={recipedifficulty} options={difficultys} onChange={(e) => setRecipeDifficulty(e.value)} optionLabel=\"name\"/>\n                            \n                        </div>\n                        <div className=\"\">\n                            <h5>Zutaten: </h5>\n                            <InputTextarea className=\"createRecipeInputText\" value={recipeingredients} onChange={(e) => setRecipeIngredients(e.target.value)} placeholder=\"Eier 3Stk, Milch 300ml, ...\" rows={5} cols={30} autoResize />\n                \n                        </div>\n                        <div className=\"\">\n                            <h5>Arbeitsanweisung: </h5>\n                            <InputTextarea className=\"createRecipeInputText\" value={recipeinstruction} onChange={(e) => setRecipeInstruction(e.target.value)} placeholder=\"erst Mixen, dann Backen, ...\" rows={5} cols={30} autoResize />\n            \n                        </div>\n                        <div className=\"\">\n                            <h5>Kategorien</h5>\n                            <MultiSelect  value={selectedcategorys} options={categorys} onChange={(e) => setSelectedCategorys(e.value)} optionLabel=\"name\" filter filterPlaceholder= \"z.B: Backen\" selectionLimit = \"4\" placeholder=\"Wähle eine Kategorie\" display=\"chip\" showSelectAll={false} />\n                            <br/>\n                        </div>\n                        <br/>\n                        <span>\n                             <Button label=\"Rezept einreichen\" icon=\"pi pi-check\" className=\"p-shadow-2 p-button-success p-buttonset p-mr-2 p-mb-2\" onClick={checkIfInputIsValid}/>\n                             <Button label=\"Zurücksetzen\" icon=\"pi pi-replay\" className=\"p-shadow-2 p-button-danger p-mb-2\" onClick={changeInputToDefault}/>\n                        </span>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default CreateRecipe;\n","import RecipeCard from './recipeCard';\nimport React, { useCallback, useLayoutEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\n\n/**\n* Component to see favorites.\n*\n* @component\n*/\nconst Favoriten = () => {\n    const history = useHistory();\n    // eslint-disable-next-line no-unused-vars\n    const [products, setProducts] = useState(null);\n    const [favorites, setFavorites] = useState(null);\n    const [status, setStatus] = useState(404);\n    const [recipecards, setRecipeCards] = useState([]);\n\n    /**\n    * Restricts access to the page if the user is not logged in\n    */\n    const handleNotLoggedIn = useCallback(() => history.push('/login'), [history]);\n    if (window.$email == null) {\n        handleNotLoggedIn();\n    }\n\n    useLayoutEffect(() => {\n        console.clear();\n        fetchAllRecipes();\n     }, []);\n\n     useLayoutEffect(() => {\n        if (favorites) {\n            let tempcardarray = [];\n            favorites.forEach(product => {\n                const catarray = product.categories.match(/[A-Za-z0-9_äÄöÖüÜß]+/g);\n                let alreadyliked = false;\n\n                if (favorites != null && favorites.length > 0) {\n                    favorites.forEach(favorite => {\n                        if (product.id === favorite.id) {\n                            alreadyliked = true;\n                        }\n                    })\n                }\n                console.log(alreadyliked);\n                tempcardarray.push(genRecipeCard(product, alreadyliked, catarray));\n            })\n            setRecipeCards(tempcardarray);\n        }\n        else {\n            console.log(\"No products\");\n        }\n\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     }, [products, favorites]);\n\n     \n\n    /**\n    * Fetches all recipes from the API\n    */\n    const fetchAllRecipes = async () => {\n    console.log(\"Fetching favorite recipes with accountId: \" + window.$id);\n    const favres = await axios({\n    method: \"post\",\n    url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/myfavorites\",\n    data: {\n        \"accountId\": window.$id\n    }\n    }).catch(error => {\n        return { error: error };\n    })\n     \n    if (favres.status === 200) {\n        setFavorites(favres.data);\n        setStatus(200);\n    }\n    else {\n        console.log(\"faild to load\")\n        setFavorites([]);\n        }\n    };\n\n    const genRecipeCard = (recipe, alreadyliked, catarray) => {\n        const card = (\n            <RecipeCard className=\"p-mb-2 p-shadow-2\" id={recipe.id} key={recipe.id} liked={alreadyliked} img={recipe.imageurl} categories={catarray} style={{ width: '25em' }} name={recipe.name} time={recipe.averagetimeinminutes + \" Minuten\"} />\n        );\n\n        return card; \n    }\n\n    //Conditional Rendering\n    if (status === 200) {\n        return (\n            <React.Fragment>\n                <div className=\"cards p-mt-4 p-mb-4\">\n                    {recipecards}\n                </div>\n                \n            </React.Fragment>\n        );\n    }\n    else {\n        return (\n            <React.Fragment>\n                <p>Rezepte werden geladen.</p>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Favoriten;","import React, {  useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Chip } from 'primereact/chip';\n\n/**\n* Component to see details of the recipe.\n*\n* @component\n*/\nconst RecipeDetail = (props) => {\n\n    useEffect(() => {\n        fetchRecipeInfo();\n    })\n\n    const recipeID = props.recipeId.match.params.recipeId;\n    const [recipe, setRecipe] = useState(\"\");\n    const [recipecreatedat, setCreatedAt] = useState(\"\");\n\n    /**\n    * Fetches the recipe info from the API\n    */\n    const fetchRecipeInfo = async () => {\n        const res = await axios({\n            method: \"get\",\n            url: \"https://ratatouilleexpress.retch.duckdns.org/api/recipes/recipe/\" + recipeID,\n          }).catch(error => {\n            return { error: error };\n          });\n\n          if (res.status === 200) {\n              setRecipe(res.data);\n\n              const dt = new Date(convertIsoDateToTimeStamp(res.data.createdAt));\n              const datestr = dt.getDate() + \". \" + convertMonthNumberToMonthName(dt.getMonth()+1) + \" \" + dt.getFullYear();\n\n              setCreatedAt(datestr);\n          }\n    }\n\n    /**\n    * Converts date from db to tmestamp\n    * @returns Javascript timestamp\n    */\n    const convertIsoDateToTimeStamp = (isoDate) => {\n        const date = new Date(isoDate);\n        return date.getTime();\n    }\n\n    /**\n    * Converts month number to german month name\n    * @returns Month name\n    */\n    const convertMonthNumberToMonthName = (monatszahl) => {\n        switch (monatszahl) {\n            default:\n                return \"\";\n            case 1:\n                return \"Jan\";\n            case 2:\n                return \"Feb\";\n            case 3:\n                return \"Mär\";\n            case 4:\n                return \"Apr\";\n            case 5:\n                return \"Mai\";\n            case 6:\n                return \"Jun\";\n            case 7:\n                return \"Jul\";\n            case 8:\n                return \"Aug\";\n            case 9:\n                return \"Sep\";\n            case 10:\n                return \"Okt\";\n            case 11:\n                return \"Nov\";\n            case 12:\n                return \"Dez\";\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <div className = \"recipeMeta p-mb-6\">\n                <h1>{recipe.name}</h1>\n                <div className = \"recipeMetaInfo\">\n                    <img alt=\"Product\" className=\"recipeIMG p-mb-3 p-shadow-3\" src={recipe.imageurl}></img>\n                    <div>\n                         <Chip label={recipe.averagetimeinminutes + \" Min.\"} icon=\"pi pi-clock\" className=\"p-mr-2 p-mb-2 custom-chip p-shadow-1\" />\n                         <Chip label={recipe.difficulty} icon=\" pi pi-compass\" className=\"p-mr-2 p-mb-2 custom-chip p-shadow-1\" />\n                         <Chip label={recipecreatedat} icon=\" pi pi-calendar\" className=\"p-mr-2 p-mb-2 custom-chip p-shadow-1\" />\n                    </div>\n                </div>\n                <div>\n                    <h2>Zutaten</h2>\n                    <span>{recipe.ingredients}</span>\n                </div>\n                <div>\n                    <h2>Zubereitung</h2>\n                    <span>{recipe.preparation}</span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default RecipeDetail;\n","import './App.css';\nimport './style.scss';\nimport 'primeflex/primeflex.css';\n\nimport Header from './components/header';\nimport Home from './components/home';\nimport RecipesMenu from './components/recipesMenu';\nimport RecipeDetail from './components/recipeDetail';\nimport Login from './components/login';\nimport Profile from './components/profile';\nimport CreateRecipe from './components/createRecipe';\nimport Favoriten from './components/favoriten';\nimport Recipe from './components/recipe';\nimport React from 'react';\n\nimport PrimeReact from \"primereact/api\";\nimport{\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nPrimeReact.ripple = true;\n\nfunction App() {\n\n  const HomePage=()=>{\n    return (\n    <React.Fragment>\n      <Header></Header>\n      <Home></Home>\n    </React.Fragment> )\n  }\n  const RecipesMenuPage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <RecipesMenu></RecipesMenu>\n      </React.Fragment> )\n  }\n  const LoginPage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <Login></Login>\n      </React.Fragment> )\n  }\n  const ProfilePage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <Profile></Profile>\n      </React.Fragment> )\n  }\n  const CreateRecipePage=()=>{\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <CreateRecipe></CreateRecipe>\n      </React.Fragment> )\n  }\n  const FavoriteRecipe=()=>{\n    return (\n    <React.Fragment>\n      <Header></Header>\n      <Favoriten></Favoriten>\n    </React.Fragment> )\n  }\n    return(\n      <Router hashType=\"noslash\" >\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/menu\">\n              <RecipesMenuPage/>\n            </Route>\n            <Route path=\"/recipe/edit/:recipeId\" render={(props) => \n              <React.Fragment>\n                <Header></Header>\n                <RecipeDetail recipeId={props} />\n              </React.Fragment> } \n            />\n            <Route path=\"/recipe/:recipeId\" render={(props) => \n              <React.Fragment>\n                <Header></Header>\n                <Recipe recipeId={props} />\n              </React.Fragment> } \n            />\n            <Route path=\"/login\">\n              <LoginPage/>\n            </Route>\n            <Route path=\"/profile\">\n              <ProfilePage/>\n            </Route>\n            <Route path=\"/create\">\n              <CreateRecipePage/>\n            </Route>\n            <Route path=\"/favorites\">\n              <FavoriteRecipe/>\n            </Route>\n            <Route path=\"/\">\n              <HomePage/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}